[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"router.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// lib/router.js                                                        //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nRouter.configure({                                                      // 1\n  layoutTemplate: 'layout',                                             // 2\n  loadingTemplate: 'loading',                                           // 3\n  notFoundTemplate: 'notFound',                                         // 4\n  waitOn: function () {                                                 // 5\n    function waitOn() {                                                 // 5\n      return Meteor.subscribe('posts');                                 // 5\n    }                                                                   //\n                                                                        //\n    return waitOn;                                                      //\n  }()                                                                   //\n});                                                                     //\n                                                                        //\nRouter.route('/', { name: 'postsList' });                               // 8\nRouter.route('/posts/:_id', {                                           // 9\n  name: 'postPage',                                                     // 10\n  data: function () {                                                   // 11\n    function data() {                                                   // 11\n      return Posts.findOne(this.params._id);                            // 12\n    }                                                                   //\n                                                                        //\n    return data;                                                        //\n  }()                                                                   //\n});                                                                     //\nRouter.route('/submit', { name: 'postSubmit' });                        // 14\n                                                                        //\nvar requireLogin = function requireLogin() {                            // 16\n  if (!Meteor.user()) {                                                 // 17\n    this.render('accessDenied');                                        // 18\n    if (Meteor.loggingIn()) {                                           // 19\n      this.render(this.loadingTemplate);                                // 20\n    } else {                                                            //\n      this.render('accessDenied');                                      // 22\n    }                                                                   //\n  } else {                                                              //\n    this.next();                                                        // 25\n  }                                                                     //\n};                                                                      //\n// 如果有人输入了像 http://localhost:3000/posts/xyz 这种格式的 URL，xyz 不是一个合法的帖子 _id\nRouter.onBeforeAction('dataNotFound', { only: 'postPage' });            // 29\nRouter.onBeforeAction(requireLogin, { only: 'postSubmit' });            // 30\n//////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"posts.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// collections/posts.js                                                 //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nPosts = new Mongo.Collection('posts');                                  // 1\nMeteor.methods({                                                        // 2\n    postInsert: function () {                                           // 3\n        function postInsert(postAttributes) {                           // 3\n            check(Meteor.userId(), String);                             // 4\n            check(postAttributes, {                                     // 5\n                title: String,                                          // 6\n                url: String                                             // 7\n            });                                                         //\n            var user = Meteor.user();                                   // 9\n            var post = _.extend(postAttributes, {                       // 10\n                userId: user._id,                                       // 11\n                author: user.username,                                  // 12\n                submitted: new Date()                                   // 13\n            });                                                         //\n            var postId = Posts.insert(post);                            // 15\n            return {                                                    // 16\n                _id: postId                                             // 17\n            };                                                          //\n        }                                                               //\n                                                                        //\n        return postInsert;                                              //\n    }()                                                                 //\n});                                                                     //\n//////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"fixtures.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// server/fixtures.js                                                   //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nif (Posts.find().count() === 0) {                                       // 1\n  Posts.insert({                                                        // 2\n    title: 'Introducing Telescope',                                     // 3\n    url: 'http://sachagreif.com/introducing-telescope/'                 // 4\n  });                                                                   //\n                                                                        //\n  Posts.insert({                                                        // 7\n    title: 'Meteor',                                                    // 8\n    url: 'http://meteor.com'                                            // 9\n  });                                                                   //\n                                                                        //\n  Posts.insert({                                                        // 12\n    title: 'The Meteor Book',                                           // 13\n    url: 'http://themeteorbook.com'                                     // 14\n  });                                                                   //\n}                                                                       //\n//////////////////////////////////////////////////////////////////////////\n\n},\"publications.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// server/publications.js                                               //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nMeteor.publish('posts', function () {                                   // 1\n  return Posts.find({ flagged: false });                                // 2\n});                                                                     //\n//////////////////////////////////////////////////////////////////////////\n\n},\"main.js\":[\"meteor/meteor\",function(require){\n\n//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// server/main.js                                                       //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n                                                                        //\nvar _meteor = require('meteor/meteor');                                 // 1\n                                                                        //\n//Meteor.subscribe('posts');                                            //\n_meteor.Meteor.startup(function () {                                    // 3\n  // code to run on server at startup                                   //\n});                                                                     //\n//////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/router.js\");\nrequire(\"./collections/posts.js\");\nrequire(\"./server/fixtures.js\");\nrequire(\"./server/publications.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/router.js","/collections/posts.js","/server/fixtures.js","/server/publications.js","/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,SAAP,CAAiB;AACf,kBAAgB,QAAhB;AACA,mBAAiB,SAAjB;AACA,oBAAkB,UAAlB;AACA;AAAQ,sBAAW;AAAE,aAAO,OAAO,SAAP,CAAiB,OAAjB,CAAP,CAAF;KAAX;;;KAAR;CAJF;;AAOA,OAAO,KAAP,CAAa,GAAb,EAAkB,EAAC,MAAM,WAAN,EAAnB;AACA,OAAO,KAAP,CAAa,aAAb,EAA4B;AAC1B,QAAM,UAAN;AACA;AAAM,oBAAW;AACf,aAAO,MAAM,OAAN,CAAc,KAAK,MAAL,CAAY,GAAZ,CAArB,CADe;KAAX;;;KAAN;CAFF;AAKA,OAAO,KAAP,CAAa,SAAb,EAAwB,EAAC,MAAM,YAAN,EAAzB;;AAEA,IAAI,eAAe,SAAf,YAAe,GAAW;AAC5B,MAAI,CAAE,OAAO,IAAP,EAAF,EAAiB;AACnB,SAAK,MAAL,CAAY,cAAZ,EADmB;AAEnB,QAAI,OAAO,SAAP,EAAJ,EAAwB;AACtB,WAAK,MAAL,CAAY,KAAK,eAAL,CAAZ,CADsB;KAAxB,MAEO;AACL,WAAK,MAAL,CAAY,cAAZ,EADK;KAFP;GAFF,MAOO;AACL,SAAK,IAAL,GADK;GAPP;CADiB;;AAanB,OAAO,cAAP,CAAsB,cAAtB,EAAsC,EAAC,MAAM,UAAN,EAAvC;AACA,OAAO,cAAP,CAAsB,YAAtB,EAAoC,EAAC,MAAM,YAAN,EAArC,mB;;;;;;;;;;;AC7BA,QAAQ,IAAI,MAAM,UAAN,CAAiB,OAArB,CAAR;AACA,OAAO,OAAP,CAAe;AACX;AAAY,4BAAS,cAAT,EAAyB;AACjC,kBAAM,OAAO,MAAP,EAAN,EAAuB,MAAvB,EADiC;AAEjC,kBAAM,cAAN,EAAsB;AAClB,uBAAO,MAAP;AACA,qBAAK,MAAL;aAFJ,EAFiC;AAMjC,gBAAI,OAAO,OAAO,IAAP,EAAP,CAN6B;AAOjC,gBAAI,OAAO,EAAE,MAAF,CAAS,cAAT,EAAyB;AAChC,wBAAQ,KAAK,GAAL;AACR,wBAAQ,KAAK,QAAL;AACR,2BAAW,IAAI,IAAJ,EAAX;aAHO,CAAP,CAP6B;AAYjC,gBAAI,SAAS,MAAM,MAAN,CAAa,IAAb,CAAT,CAZ6B;AAajC,mBAAO;AACH,qBAAK,MAAL;aADJ,CAbiC;SAAzB;;;OAAZ;CADJ,yE;;;;;;;;;;;ACDA,IAAI,MAAM,IAAN,GAAa,KAAb,OAAyB,CAAzB,EAA4B;AAC9B,QAAM,MAAN,CAAa;AACX,WAAO,uBAAP;AACA,SAAK,8CAAL;GAFF,EAD8B;;AAM9B,QAAM,MAAN,CAAa;AACX,WAAO,QAAP;AACA,SAAK,mBAAL;GAFF,EAN8B;;AAW9B,QAAM,MAAN,CAAa;AACX,WAAO,iBAAP;AACA,SAAK,0BAAL;GAFF,EAX8B;CAAhC,yE;;;;;;;;;;;ACAA,OAAO,OAAP,CAAe,OAAf,EAAwB,YAAW;AACjC,SAAO,MAAM,IAAN,CAAW,EAAC,SAAS,KAAT,EAAZ,CAAP,CADiC;CAAX,CAAxB,wE;;;;;;;;;;;ACAA;;;AAEA,eAAO,OAAP,CAAe,YAAM;;CAAN,CAAf,wE","file":"/app.js","sourcesContent":["Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n  waitOn: function() { return Meteor.subscribe('posts'); }\n});\n\nRouter.route('/', {name: 'postsList'});\nRouter.route('/posts/:_id', {\n  name: 'postPage',\n  data: function() {\n    return Posts.findOne(this.params._id);}\n});\nRouter.route('/submit', {name: 'postSubmit'});\n\nvar requireLogin = function() {\n  if (! Meteor.user()) {\n    this.render('accessDenied');\n    if (Meteor.loggingIn()) {\n      this.render(this.loadingTemplate);\n    } else {\n      this.render('accessDenied');\n    }\n  } else {\n    this.next();\n  }\n}\n// 如果有人输入了像 http://localhost:3000/posts/xyz 这种格式的 URL，xyz 不是一个合法的帖子 _id\nRouter.onBeforeAction('dataNotFound', {only: 'postPage'});\nRouter.onBeforeAction(requireLogin, {only: 'postSubmit'});","Posts = new Mongo.Collection('posts');\r\nMeteor.methods({\r\n    postInsert: function(postAttributes) {\r\n        check(Meteor.userId(), String);\r\n        check(postAttributes, {\r\n            title: String,\r\n            url: String\r\n        });\r\n        var user = Meteor.user();\r\n        var post = _.extend(postAttributes, {\r\n            userId: user._id,\r\n            author: user.username,\r\n            submitted: new Date()\r\n        });\r\n        var postId = Posts.insert(post);\r\n        return {\r\n            _id: postId\r\n        };\r\n    }\r\n});","if (Posts.find().count() === 0) {\n  Posts.insert({\n    title: 'Introducing Telescope',\n    url: 'http://sachagreif.com/introducing-telescope/'\n  });\n\n  Posts.insert({\n    title: 'Meteor',\n    url: 'http://meteor.com'\n  });\n\n  Posts.insert({\n    title: 'The Meteor Book',\n    url: 'http://themeteorbook.com'\n  });\n}","Meteor.publish('posts', function() {\n  return Posts.find({flagged: false});\n});","import { Meteor } from 'meteor/meteor';\n//Meteor.subscribe('posts');\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n"]}}]