[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nRouter = Package['iron:router'].Router;\nRouteController = Package['iron:router'].RouteController;\naccountsUIBootstrap3 = Package['ian:accounts-ui-bootstrap-3'].accountsUIBootstrap3;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nSession = Package.session.Session;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nIron = Package['iron:core'].Iron;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"templates\":{\"application\":{\"template.layout.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/application/template.layout.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"layout\");                                                                                        // 2\nTemplate[\"layout\"] = new Template(\"Template.layout\", (function() {                                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"container\"                                                                                               // 6\n  }, \"\\n\\n        \", Spacebars.include(view.lookupTemplate(\"header\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"errors\")), \"\\n        \", HTML.DIV({\n    id: \"main\",                                                                                                        // 8\n    \"class\": \"row-fluid\"                                                                                               // 9\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n        \"), \"\\n    \");                      // 10\n}));                                                                                                                   // 11\n                                                                                                                       // 12\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.not_found.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/application/template.not_found.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"notFound\");                                                                                      // 2\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.Raw('<div class=\"not-found jumbotron\">\\n        <h2>404</h2>\\n        <p>Sorry, we couldn\\'t find a page at this address. 抱歉，我们无法找到该页面。</p>\\n    </div>');\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"layout.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/application/layout.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-10.                                                                             //\n */                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"comments\":{\"template.comment_item.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/comments/template.comment_item.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"commentItem\");                                                                                   // 2\nTemplate[\"commentItem\"] = new Template(\"Template.commentItem\", (function() {                                           // 3\n  var view = this;                                                                                                     // 4\n  return HTML.LI(\"\\n        \", HTML.H4(\"\\n            \", HTML.SPAN({                                                   // 5\n    \"class\": \"author\"                                                                                                  // 6\n  }, Blaze.View(\"lookup:author\", function() {                                                                          // 7\n    return Spacebars.mustache(view.lookup(\"author\"));                                                                  // 8\n  })), \"\\n            \", HTML.SPAN({                                                                                   // 9\n    \"class\": \"date\"                                                                                                    // 10\n  }, \"on \", Blaze.View(\"lookup:submittedText\", function() {                                                            // 11\n    return Spacebars.mustache(view.lookup(\"submittedText\"));                                                           // 12\n  })), \"\\n        \"), \"\\n        \", HTML.P(Blaze.View(\"lookup:body\", function() {                                      // 13\n    return Spacebars.mustache(view.lookup(\"body\"));                                                                    // 14\n  })), \"\\n    \");                                                                                                      // 15\n}));                                                                                                                   // 16\n                                                                                                                       // 17\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.comment_submit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/comments/template.comment_submit.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"commentSubmit\");                                                                                 // 2\nTemplate[\"commentSubmit\"] = new Template(\"Template.commentSubmit\", (function() {                                       // 3\n  var view = this;                                                                                                     // 4\n  return HTML.FORM({                                                                                                   // 5\n    name: \"comment\",                                                                                                   // 6\n    \"class\": \"comment-form form\"                                                                                       // 7\n  }, \"\\n        \", HTML.DIV({                                                                                          // 8\n    \"class\": function() {                                                                                              // 9\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"body\") ];                                 // 10\n    }                                                                                                                  // 11\n  }, \"\\n            \", HTML.DIV({                                                                                      // 12\n    \"class\": \"controls\"                                                                                                // 13\n  }, \"\\n                \", HTML.Raw('<label for=\"body\">Comment on this post</label>'), \"\\n                \", HTML.TEXTAREA({\n    name: \"body\",                                                                                                      // 15\n    id: \"body\",                                                                                                        // 16\n    \"class\": \"form-control\",                                                                                           // 17\n    rows: \"3\"                                                                                                          // 18\n  }), \"\\n                \", HTML.SPAN({                                                                                // 19\n    \"class\": \"help-block\"                                                                                              // 20\n  }, Blaze.View(\"lookup:errorMessage\", function() {                                                                    // 21\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"body\");                                                    // 22\n  })), \"\\n            \"), \"\\n        \"), HTML.Raw('\\n        <button type=\"submit\" class=\"btn btn-primary\">Add Comment</button>\\n    '));\n}));                                                                                                                   // 24\n                                                                                                                       // 25\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"comment_item.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/comments/comment_item.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nTemplate.commentItem.helpers({                                                                                         // 4\n    submittedText: function () {                                                                                       // 5\n        function submittedText() {                                                                                     // 5\n            return this.submitted.toString();                                                                          // 6\n        }                                                                                                              //\n                                                                                                                       //\n        return submittedText;                                                                                          //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"comment_submit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/comments/comment_submit.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nTemplate.commentSubmit.onCreated(function () {                                                                         // 4\n    Session.set('commentSubmitErrors', {});                                                                            // 5\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.commentSubmit.helpers({                                                                                       // 8\n    errorMessage: function () {                                                                                        // 9\n        function errorMessage(field) {                                                                                 // 9\n            return Session.get('commentSubmitErrors')[field];                                                          // 10\n        }                                                                                                              //\n                                                                                                                       //\n        return errorMessage;                                                                                           //\n    }(),                                                                                                               //\n    errorClass: function () {                                                                                          // 12\n        function errorClass(field) {                                                                                   // 12\n            return !!Session.get('commentSubmitErrors')[field] ? 'has-error' : '';                                     // 13\n        }                                                                                                              //\n                                                                                                                       //\n        return errorClass;                                                                                             //\n    }()                                                                                                                //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.commentSubmit.events({                                                                                        // 17\n    'submit form': function () {                                                                                       // 18\n        function submitForm(e, template) {                                                                             // 18\n            e.preventDefault();                                                                                        // 19\n                                                                                                                       //\n            var $body = $(e.target).find('[name=body]');                                                               // 21\n            var comment = {                                                                                            // 22\n                body: $body.val(),                                                                                     // 23\n                postId: template.data._id                                                                              // 24\n            };                                                                                                         //\n                                                                                                                       //\n            var errors = {};                                                                                           // 27\n            if (!comment.body) {                                                                                       // 28\n                errors.body = \"Please write some content\";                                                             // 29\n                return Session.set('commentSubmitErrors', errors);                                                     // 30\n            }                                                                                                          //\n                                                                                                                       //\n            Meteor.call('commentInsert', comment, function (error, commentId) {                                        // 33\n                if (error) {                                                                                           // 34\n                    throwError(error.reason);                                                                          // 35\n                } else {                                                                                               //\n                    $body.val('');                                                                                     // 37\n                }                                                                                                      //\n            });                                                                                                        //\n        }                                                                                                              //\n                                                                                                                       //\n        return submitForm;                                                                                             //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"includes\":{\"template.access_denied.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/includes/template.access_denied.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"accessDenied\");                                                                                  // 2\nTemplate[\"accessDenied\"] = new Template(\"Template.accessDenied\", (function() {                                         // 3\n  var view = this;                                                                                                     // 4\n  return HTML.Raw('<div class=\"access-denied jumbotron\">\\n        <h2>Access Denied</h2>\\n        <p>You can\\'t get here! Please log in.</p>\\n    </div>');\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.errors.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/includes/template.errors.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"errors\");                                                                                        // 2\nTemplate[\"errors\"] = new Template(\"Template.errors\", (function() {                                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"errors\"                                                                                                  // 6\n  }, \"\\n        \", Blaze.Each(function() {                                                                             // 7\n    return Spacebars.call(view.lookup(\"errors\"));                                                                      // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"error\")), \"\\n        \" ];                        // 10\n  }), \"\\n    \");                                                                                                       // 11\n}));                                                                                                                   // 12\n                                                                                                                       // 13\nTemplate.__checkName(\"error\");                                                                                         // 14\nTemplate[\"error\"] = new Template(\"Template.error\", (function() {                                                       // 15\n  var view = this;                                                                                                     // 16\n  return HTML.DIV({                                                                                                    // 17\n    \"class\": \"alert alert-danger\",                                                                                     // 18\n    role: \"alert\"                                                                                                      // 19\n  }, HTML.Raw('\\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\\n        '), Blaze.View(\"lookup:message\", function() {\n    return Spacebars.mustache(view.lookup(\"message\"));                                                                 // 21\n  }), \"\\n    \");                                                                                                       // 22\n}));                                                                                                                   // 23\n                                                                                                                       // 24\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.header.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/includes/template.header.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"header\");                                                                                        // 2\nTemplate[\"header\"] = new Template(\"Template.header\", (function() {                                                     // 3\n  var view = this;                                                                                                     // 4\n  return HTML.NAV({                                                                                                    // 5\n    \"class\": \"navbar navbar-default\",                                                                                  // 6\n    role: \"navigation\"                                                                                                 // 7\n  }, \"\\n        \", HTML.DIV({                                                                                          // 8\n    \"class\": \"navbar-header\"                                                                                           // 9\n  }, \"\\n            \", HTML.Raw('<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navigation\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </button>'), \"\\n            \", HTML.A({\n    \"class\": \"navbar-brand\",                                                                                           // 11\n    href: function() {                                                                                                 // 12\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"postsList\");                                                  // 13\n    }                                                                                                                  // 14\n  }, \"Microscope\"), \"\\n        \"), \"\\n        \", HTML.DIV({                                                            // 15\n    \"class\": \"collapse navbar-collapse\",                                                                               // 16\n    id: \"navigation\"                                                                                                   // 17\n  }, \"\\n            \", HTML.UL({                                                                                       // 18\n    \"class\": \"nav navbar-nav\"                                                                                          // 19\n  }, \"\\n                \", Blaze.If(function() {                                                                       // 20\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 21\n  }, function() {                                                                                                      // 22\n    return [ \"\\n                    \", HTML.LI(\"\\n                        \", HTML.A({                                  // 23\n      href: function() {                                                                                               // 24\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"postSubmit\");                                               // 25\n      }                                                                                                                // 26\n    }, \"Submit Post\"), \"\\n                    \"), \"\\n                    \", HTML.LI({                                  // 27\n      \"class\": \"dropdown\"                                                                                              // 28\n    }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"notifications\")), \"\\n                    \"), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n            \", HTML.UL({                                                                   // 30\n    \"class\": \"nav navbar-nav navbar-right\"                                                                             // 31\n  }, \"\\n                \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));                                                                                                                   // 33\n                                                                                                                       // 34\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.loading.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/includes/template.loading.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"loading\");                                                                                       // 2\nTemplate[\"loading\"] = new Template(\"Template.loading\", (function() {                                                   // 3\n  var view = this;                                                                                                     // 4\n  return \"loading````\";                                                                                                // 5\n}));                                                                                                                   // 6\n                                                                                                                       // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"errors.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/includes/errors.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nTemplate.errors.helpers({                                                                                              // 4\n    errors: function () {                                                                                              // 5\n        function errors() {                                                                                            // 5\n            return Errors.find();                                                                                      // 6\n        }                                                                                                              //\n                                                                                                                       //\n        return errors;                                                                                                 //\n    }()                                                                                                                //\n});                                                                                                                    //\nTemplate.error.onRendered(function () {                                                                                // 9\n    var error = this.data;                                                                                             // 10\n    Meteor.setTimeout(function () {                                                                                    // 11\n        Errors.remove(error._id);                                                                                      // 12\n    }, 3000);                                                                                                          //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"notifications\":{\"template.notifications.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/notifications/template.notifications.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"notifications\");                                                                                 // 2\nTemplate[\"notifications\"] = new Template(\"Template.notifications\", (function() {                                       // 3\n  var view = this;                                                                                                     // 4\n  return [ HTML.A({                                                                                                    // 5\n    href: \"#\",                                                                                                         // 6\n    \"class\": \"dropdown-toggle\",                                                                                        // 7\n    \"data-toggle\": \"dropdown\"                                                                                          // 8\n  }, \"\\n        Notifications\\n        \", Blaze.If(function() {                                                        // 9\n    return Spacebars.call(view.lookup(\"notificationCount\"));                                                           // 10\n  }, function() {                                                                                                      // 11\n    return [ \"\\n            \", HTML.SPAN({                                                                             // 12\n      \"class\": \"badge badge-inverse\"                                                                                   // 13\n    }, Blaze.View(\"lookup:notificationCount\", function() {                                                             // 14\n      return Spacebars.mustache(view.lookup(\"notificationCount\"));                                                     // 15\n    })), \"\\n        \" ];                                                                                               // 16\n  }), \"\\n        \", HTML.Raw('<b class=\"caret\"></b>'), \"\\n    \"), \"\\n    \", HTML.UL({                                  // 17\n    \"class\": \"notification dropdown-menu\"                                                                              // 18\n  }, \"\\n        \", Blaze.If(function() {                                                                               // 19\n    return Spacebars.call(view.lookup(\"notificationCount\"));                                                           // 20\n  }, function() {                                                                                                      // 21\n    return [ \"\\n            \", Blaze.Each(function() {                                                                 // 22\n      return Spacebars.call(view.lookup(\"notifications\"));                                                             // 23\n    }, function() {                                                                                                    // 24\n      return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"notificationItem\")), \"\\n            \" ];   // 25\n    }), \"\\n        \" ];                                                                                                // 26\n  }, function() {                                                                                                      // 27\n    return [ \"\\n            \", HTML.LI(HTML.SPAN(\"No Notifications\")), \"\\n        \" ];                                 // 28\n  }), \"\\n    \") ];                                                                                                     // 29\n}));                                                                                                                   // 30\n                                                                                                                       // 31\nTemplate.__checkName(\"notificationItem\");                                                                              // 32\nTemplate[\"notificationItem\"] = new Template(\"Template.notificationItem\", (function() {                                 // 33\n  var view = this;                                                                                                     // 34\n  return HTML.LI(\"\\n        \", HTML.A({                                                                                // 35\n    href: function() {                                                                                                 // 36\n      return Spacebars.mustache(view.lookup(\"notificationPostPath\"));                                                  // 37\n    }                                                                                                                  // 38\n  }, \"\\n            \", HTML.STRONG(Blaze.View(\"lookup:commenterName\", function() {                                     // 39\n    return Spacebars.mustache(view.lookup(\"commenterName\"));                                                           // 40\n  })), \" commented on your post\\n        \"), \"\\n    \");                                                                // 41\n}));                                                                                                                   // 42\n                                                                                                                       // 43\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"notifications.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/notifications/notifications.js                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nTemplate.notifications.helpers({                                                                                       // 4\n    notifications: function () {                                                                                       // 5\n        function notifications() {                                                                                     // 5\n            return Notifications.find({ userId: Meteor.userId(), read: false });                                       // 6\n        }                                                                                                              //\n                                                                                                                       //\n        return notifications;                                                                                          //\n    }(),                                                                                                               //\n    notificationCount: function () {                                                                                   // 8\n        function notificationCount() {                                                                                 // 8\n            return Notifications.find({ userId: Meteor.userId(), read: false }).count();                               // 9\n        }                                                                                                              //\n                                                                                                                       //\n        return notificationCount;                                                                                      //\n    }()                                                                                                                //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.notificationItem.helpers({                                                                                    // 13\n    notificationPostPath: function () {                                                                                // 14\n        function notificationPostPath() {                                                                              // 14\n            return Router.routes.postPage.path({ _id: this.postId });                                                  // 15\n        }                                                                                                              //\n                                                                                                                       //\n        return notificationPostPath;                                                                                   //\n    }()                                                                                                                //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.notificationItem.events({                                                                                     // 19\n    'click a': function () {                                                                                           // 20\n        function clickA() {                                                                                            // 20\n            Notifications.update(this._id, { $set: { read: true } });                                                  // 21\n        }                                                                                                              //\n                                                                                                                       //\n        return clickA;                                                                                                 //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"posts\":{\"template.post_edit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/template.post_edit.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"postEdit\");                                                                                      // 2\nTemplate[\"postEdit\"] = new Template(\"Template.postEdit\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.FORM({                                                                                                   // 5\n    \"class\": \"main form\"                                                                                               // 6\n  }, \"\\n        \", HTML.DIV({                                                                                          // 7\n    \"class\": function() {                                                                                              // 8\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"url\") ];                                  // 9\n    }                                                                                                                  // 10\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"url\">URL</label>'), \"\\n            \", HTML.DIV({    // 11\n    \"class\": \"controls\"                                                                                                // 12\n  }, \"\\n                \", HTML.INPUT({                                                                                // 13\n    name: \"url\",                                                                                                       // 14\n    id: \"url\",                                                                                                         // 15\n    type: \"text\",                                                                                                      // 16\n    value: function() {                                                                                                // 17\n      return Spacebars.mustache(view.lookup(\"url\"));                                                                   // 18\n    },                                                                                                                 // 19\n    placeholder: \"Your URL\",                                                                                           // 20\n    \"class\": \"form-control\"                                                                                            // 21\n  }), \"\\n                \", HTML.SPAN({                                                                                // 22\n    \"class\": \"help-block\"                                                                                              // 23\n  }, Blaze.View(\"lookup:errorMessage\", function() {                                                                    // 24\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"url\");                                                     // 25\n  })), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({                                                      // 26\n    \"class\": function() {                                                                                              // 27\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"title\") ];                                // 28\n    }                                                                                                                  // 29\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"title\">Title</label>'), \"\\n            \", HTML.DIV({\n    \"class\": \"controls\"                                                                                                // 31\n  }, \"\\n                \", HTML.INPUT({                                                                                // 32\n    name: \"title\",                                                                                                     // 33\n    id: \"title\",                                                                                                       // 34\n    type: \"text\",                                                                                                      // 35\n    value: function() {                                                                                                // 36\n      return Spacebars.mustache(view.lookup(\"title\"));                                                                 // 37\n    },                                                                                                                 // 38\n    placeholder: \"Name your post\",                                                                                     // 39\n    \"class\": \"form-control\"                                                                                            // 40\n  }), \"\\n                \", HTML.SPAN({                                                                                // 41\n    \"class\": \"help-block\"                                                                                              // 42\n  }, Blaze.View(\"lookup:errorMessage\", function() {                                                                    // 43\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"title\");                                                   // 44\n  })), \"\\n            \"), \"\\n        \"), HTML.Raw('\\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary submit\">\\n        <hr>\\n        <a class=\"btn btn-danger delete\" href=\"#\">Delete post</a>\\n    '));\n}));                                                                                                                   // 46\n                                                                                                                       // 47\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.post_item.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/template.post_item.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"postItem\");                                                                                      // 2\nTemplate[\"postItem\"] = new Template(\"Template.postItem\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"post\"                                                                                                    // 6\n  }, \"\\n    \", HTML.A({                                                                                                // 7\n    href: \"#\",                                                                                                         // 8\n    \"class\": function() {                                                                                              // 9\n      return [ \"upvote btn btn-default \", Spacebars.mustache(view.lookup(\"upvotedClass\")) ];                           // 10\n    }                                                                                                                  // 11\n  }, \"⬆\"), \"\\n    \", HTML.DIV({                                                                                        // 12\n    \"class\": \"post-content\"                                                                                            // 13\n  }, \"\\n        \", HTML.H3(HTML.A({                                                                                    // 14\n    href: function() {                                                                                                 // 15\n      return Spacebars.mustache(view.lookup(\"url\"));                                                                   // 16\n    }                                                                                                                  // 17\n  }, Blaze.View(\"lookup:title\", function() {                                                                           // 18\n    return Spacebars.mustache(view.lookup(\"title\"));                                                                   // 19\n  })), HTML.SPAN(Blaze.View(\"lookup:domain\", function() {                                                              // 20\n    return Spacebars.mustache(view.lookup(\"domain\"));                                                                  // 21\n  }))), \"\\n        \", HTML.P(\"\\n            \", Blaze.View(\"lookup:votes\", function() {                                 // 22\n    return Spacebars.mustache(view.lookup(\"votes\"));                                                                   // 23\n  }), \" Votes,\\n            submitted by \", Blaze.View(\"lookup:author\", function() {                                   // 24\n    return Spacebars.mustache(view.lookup(\"author\"));                                                                  // 25\n  }), \",\\n            \", HTML.A({                                                                                      // 26\n    href: function() {                                                                                                 // 27\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"postPage\");                                                   // 28\n    }                                                                                                                  // 29\n  }, Blaze.View(\"lookup:commentsCount\", function() {                                                                   // 30\n    return Spacebars.mustache(view.lookup(\"commentsCount\"));                                                           // 31\n  }), \" comments\"), \"\\n            \", Blaze.If(function() {                                                            // 32\n    return Spacebars.call(view.lookup(\"ownPost\"));                                                                     // 33\n  }, function() {                                                                                                      // 34\n    return HTML.A({                                                                                                    // 35\n      href: function() {                                                                                               // 36\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"postEdit\");                                                 // 37\n      }                                                                                                                // 38\n    }, \"Edit\");                                                                                                        // 39\n  }), \"\\n        \"), \"\\n    \"), \"\\n    \", HTML.A({                                                                     // 40\n    href: function() {                                                                                                 // 41\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"postPage\");                                                   // 42\n    },                                                                                                                 // 43\n    \"class\": \"discuss btn btn-default\"                                                                                 // 44\n  }, \"Discuss\"), \"\\n\");                                                                                                // 45\n}));                                                                                                                   // 46\n                                                                                                                       // 47\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.post_list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/template.post_list.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"postsList\");                                                                                     // 2\nTemplate[\"postsList\"] = new Template(\"Template.postsList\", (function() {                                               // 3\n  var view = this;                                                                                                     // 4\n  return HTML.DIV({                                                                                                    // 5\n    \"class\": \"posts\"                                                                                                   // 6\n  }, \"\\n    \", Blaze.Each(function() {                                                                                 // 7\n    return Spacebars.call(view.lookup(\"posts\"));                                                                       // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"postItem\")), \"\\n    \" ];                               // 10\n  }), \"\\n      \", Blaze.If(function() {                                                                                // 11\n    return Spacebars.call(view.lookup(\"nextPath\"));                                                                    // 12\n  }, function() {                                                                                                      // 13\n    return [ \"\\n          \", HTML.A({                                                                                  // 14\n      \"class\": \"load-more\",                                                                                            // 15\n      href: function() {                                                                                               // 16\n        return Spacebars.mustache(view.lookup(\"nextPath\"));                                                            // 17\n      }                                                                                                                // 18\n    }, \"Load more\"), \"\\n          \" ];                                                                                 // 19\n  }, function() {                                                                                                      // 20\n    return [ \"\\n          \", HTML.P({                                                                                  // 21\n      \"class\": \"bg-info\"                                                                                               // 22\n    }, \"没有更多了·····\"), \"\\n\\n      \" ];                                                                                  // 23\n  }), \"\\n  \");                                                                                                         // 24\n}));                                                                                                                   // 25\n                                                                                                                       // 26\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.post_page.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/template.post_page.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"postPage\");                                                                                      // 2\nTemplate[\"postPage\"] = new Template(\"Template.postPage\", (function() {                                                 // 3\n  var view = this;                                                                                                     // 4\n  return [ Spacebars.include(view.lookupTemplate(\"postItem\")), \"\\n    \", HTML.UL({                                     // 5\n    \"class\": \"comments\"                                                                                                // 6\n  }, \"\\n        \", Blaze.Each(function() {                                                                             // 7\n    return Spacebars.call(view.lookup(\"comments\"));                                                                    // 8\n  }, function() {                                                                                                      // 9\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"commentItem\")), \"\\n        \" ];                  // 10\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {                                                                       // 11\n    return Spacebars.call(view.lookup(\"currentUser\"));                                                                 // 12\n  }, function() {                                                                                                      // 13\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"commentSubmit\")), \"\\n    \" ];                        // 14\n  }, function() {                                                                                                      // 15\n    return [ \"\\n        \", HTML.P(\"Please log in to leave a comment.\"), \"\\n    \" ];                                    // 16\n  }) ];                                                                                                                // 17\n}));                                                                                                                   // 18\n                                                                                                                       // 19\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.post_submit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/template.post_submit.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n                                                                                                                       // 1\nTemplate.__checkName(\"postSubmit\");                                                                                    // 2\nTemplate[\"postSubmit\"] = new Template(\"Template.postSubmit\", (function() {                                             // 3\n  var view = this;                                                                                                     // 4\n  return HTML.FORM({                                                                                                   // 5\n    \"class\": \"main form\"                                                                                               // 6\n  }, \"\\n        \", HTML.DIV({                                                                                          // 7\n    \"class\": function() {                                                                                              // 8\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"url\") ];                                  // 9\n    }                                                                                                                  // 10\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"url\">URL</label>'), \"\\n            \", HTML.DIV({    // 11\n    \"class\": \"controls\"                                                                                                // 12\n  }, \"\\n                \", HTML.Raw('<input name=\"url\" id=\"url\" type=\"text\" value=\"\" placeholder=\"Your URL\" class=\"form-control\">'), \"\\n                \", HTML.SPAN({\n    \"class\": \"help-block\"                                                                                              // 14\n  }, Blaze.View(\"lookup:errorMessage\", function() {                                                                    // 15\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"url\");                                                     // 16\n  })), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({                                                      // 17\n    \"class\": function() {                                                                                              // 18\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"title\") ];                                // 19\n    }                                                                                                                  // 20\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"title\">Title</label>'), \"\\n            \", HTML.DIV({\n    \"class\": \"controls\"                                                                                                // 22\n  }, \"\\n                \", HTML.Raw('<input name=\"title\" id=\"title\" type=\"text\" value=\"\" placeholder=\"Name your post\" class=\"form-control\">'), \"\\n                \", HTML.SPAN({\n    \"class\": \"help-block\"                                                                                              // 24\n  }, Blaze.View(\"lookup:errorMessage\", function() {                                                                    // 25\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"title\");                                                   // 26\n  })), \"\\n            \"), \"\\n        \"), HTML.Raw('\\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\">\\n    '));\n}));                                                                                                                   // 28\n                                                                                                                       // 29\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"post_edit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/post_edit.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.postEdit.onCreated(function () {                                                                              // 1\n    Session.set('postEditErrors', {});                                                                                 // 2\n});                                                                                                                    //\nTemplate.postEdit.helpers({                                                                                            // 4\n    errorMessage: function () {                                                                                        // 5\n        function errorMessage(field) {                                                                                 // 5\n            return Session.get('postEditErrors')[field];                                                               // 6\n        }                                                                                                              //\n                                                                                                                       //\n        return errorMessage;                                                                                           //\n    }(),                                                                                                               //\n    errorClass: function () {                                                                                          // 8\n        function errorClass(field) {                                                                                   // 8\n            return !!Session.get('postEditErrors')[field] ? 'has-error' : '';                                          // 9\n        }                                                                                                              //\n                                                                                                                       //\n        return errorClass;                                                                                             //\n    }()                                                                                                                //\n});                                                                                                                    //\n                                                                                                                       //\nTemplate.postEdit.events({                                                                                             // 13\n    'submit form': function () {                                                                                       // 14\n        function submitForm(e) {                                                                                       // 14\n            e.preventDefault();                                                                                        // 15\n                                                                                                                       //\n            var currentPostId = this._id;                                                                              // 17\n                                                                                                                       //\n            var postProperties = {                                                                                     // 19\n                url: $(e.target).find('[name=url]').val(),                                                             // 20\n                title: $(e.target).find('[name=title]').val()                                                          // 21\n            };                                                                                                         //\n                                                                                                                       //\n            var errors = validatePost(postProperties);                                                                 // 24\n            if (errors.title || errors.url) return Session.set('postEditErrors', errors);                              // 25\n                                                                                                                       //\n            Posts.update(currentPostId, { $set: postProperties }, function (error) {                                   // 28\n                if (error) {                                                                                           // 29\n                    // 向用户显示错误消息                                                                                       //\n                    throwError(error.reason);                                                                          // 31\n                } else {                                                                                               //\n                    Router.go('postPage', { _id: currentPostId });                                                     // 33\n                }                                                                                                      //\n            });                                                                                                        //\n        }                                                                                                              //\n                                                                                                                       //\n        return submitForm;                                                                                             //\n    }(),                                                                                                               //\n                                                                                                                       //\n    'click .delete': function () {                                                                                     // 38\n        function clickDelete(e) {                                                                                      // 38\n            e.preventDefault();                                                                                        // 39\n                                                                                                                       //\n            if (confirm(\"Delete this post?\")) {                                                                        // 41\n                var currentPostId = this._id;                                                                          // 42\n                Posts.remove(currentPostId);                                                                           // 43\n                Router.go('postsList');                                                                                // 44\n            }                                                                                                          //\n        }                                                                                                              //\n                                                                                                                       //\n        return clickDelete;                                                                                            //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"post_item.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/post_item.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.postItem.helpers({                                                                                            // 1\n  ownPost: function () {                                                                                               // 2\n    function ownPost() {                                                                                               // 2\n      return this.userId === Meteor.userId();                                                                          // 3\n    }                                                                                                                  //\n                                                                                                                       //\n    return ownPost;                                                                                                    //\n  }(),                                                                                                                 //\n  domain: function () {                                                                                                // 5\n    function domain() {                                                                                                // 5\n      var a = document.createElement('a');                                                                             // 6\n      a.href = this.url; //this 是模版each的遍历对象                                                                           // 7\n      return a.hostname;                                                                                               // 5\n    }                                                                                                                  //\n                                                                                                                       //\n    return domain;                                                                                                     //\n  }(),                                                                                                                 //\n  commentsCount: function () {                                                                                         // 10\n    function commentsCount() {                                                                                         // 10\n      return Comments.find({ postId: this._id }).count();                                                              // 11\n    }                                                                                                                  //\n                                                                                                                       //\n    return commentsCount;                                                                                              //\n  }(),                                                                                                                 //\n  upvotedClass: function () {                                                                                          // 13\n    function upvotedClass() {                                                                                          // 13\n      var userId = Meteor.userId();                                                                                    // 14\n      if (userId && !_.include(this.upvoters, userId)) {                                                               // 15\n        return 'btn-primary upvotable';                                                                                // 16\n      } else {                                                                                                         //\n        return 'disabled';                                                                                             // 18\n      }                                                                                                                //\n    }                                                                                                                  //\n                                                                                                                       //\n    return upvotedClass;                                                                                               //\n  }()                                                                                                                  //\n});                                                                                                                    //\nTemplate.postItem.events({                                                                                             // 22\n  'click .upvote': function () {                                                                                       // 23\n    function clickUpvote(e) {                                                                                          // 23\n      e.preventDefault();                                                                                              // 24\n      Meteor.call('upvote', this._id);                                                                                 // 25\n    }                                                                                                                  //\n                                                                                                                       //\n    return clickUpvote;                                                                                                //\n  }()                                                                                                                  //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"post_list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/post_list.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nTemplate.postsList.helpers({                                                                                           // 1\n  // posts: function() {                                                                                               //\n  //   return Posts.find({},{sort:{submitted:-1}});                                                                    //\n  // }                                                                                                                 //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"post_page.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/post_page.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nTemplate.postPage.helpers({                                                                                            // 4\n    comments: function () {                                                                                            // 5\n        function comments() {                                                                                          // 5\n            return Comments.find({ postId: this._id });                                                                // 6\n        }                                                                                                              //\n                                                                                                                       //\n        return comments;                                                                                               //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"post_submit.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/templates/posts/post_submit.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-10.                                                                             //\n */                                                                                                                    //\nTemplate.postSubmit.onCreated(function () {                                                                            // 4\n    Session.set('postSubmitErrors', {});                                                                               // 5\n});                                                                                                                    //\nTemplate.postSubmit.helpers({                                                                                          // 7\n    errorMessage: function () {                                                                                        // 8\n        function errorMessage(field) {                                                                                 // 8\n            return Session.get('postSubmitErrors')[field];                                                             // 9\n        }                                                                                                              //\n                                                                                                                       //\n        return errorMessage;                                                                                           //\n    }(),                                                                                                               //\n    errorClass: function () {                                                                                          // 11\n        function errorClass(field) {                                                                                   // 11\n            return !!Session.get('postSubmitErrors')[field] ? 'has-error' : '';                                        // 12\n        }                                                                                                              //\n                                                                                                                       //\n        return errorClass;                                                                                             //\n    }()                                                                                                                //\n});                                                                                                                    //\nTemplate.postSubmit.events({                                                                                           // 15\n    'submit form': function () {                                                                                       // 16\n        function submitForm(e) {                                                                                       // 16\n            e.preventDefault();                                                                                        // 17\n                                                                                                                       //\n            var post = {                                                                                               // 19\n                url: $(e.target).find('[name=url]').val(),                                                             // 20\n                title: $(e.target).find('[name=title]').val()                                                          // 21\n            };                                                                                                         //\n            var errors = validatePost(post);                                                                           // 23\n            if (errors.title || errors.url) return Session.set('postSubmitErrors', errors);                            // 24\n            Meteor.call('postInsert', post, function (error, result) {                                                 // 26\n                // 显示错误信息并退出                                                                                           //\n                if (error) return throwError(error.reason);                                                            // 28\n                // 显示结果，跳转页面                                                                                           //\n                if (result.postExists) return throwError('链接已存在');;                                                    // 26\n                Router.go('postPage', { _id: result._id });                                                            // 33\n            });                                                                                                        //\n        }                                                                                                              //\n                                                                                                                       //\n        return submitForm;                                                                                             //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"helpers\":{\"config.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/helpers/config.js                                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-10.                                                                             //\n */                                                                                                                    //\n//通过用户名注册或者登录                                                                                                          //\nAccounts.ui.config({                                                                                                   // 5\n  passwordSignupFields: 'USERNAME_ONLY'                                                                                // 6\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"errors.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/helpers/errors.js                                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nErrors = new Mongo.Collection(null);                                                                                   // 4\nthrowError = function throwError(message) {                                                                            // 5\n  Errors.insert({ message: message });                                                                                 // 6\n};                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// client/main.js                                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n//Meteor.subscribe('posts');                                                                                           //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lib\":{\"comments.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// lib/comments.js                                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nComments = new Mongo.Collection('comments');                                                                           // 4\nMeteor.methods({                                                                                                       // 5\n    commentInsert: function () {                                                                                       // 6\n        function commentInsert(commentAttributes) {                                                                    // 6\n            check(this.userId, String);                                                                                // 7\n            check(commentAttributes, {                                                                                 // 8\n                postId: String,                                                                                        // 9\n                body: String                                                                                           // 10\n            });                                                                                                        //\n            var user = Meteor.user();                                                                                  // 12\n            var post = Posts.findOne(commentAttributes.postId);                                                        // 13\n            if (!post) throw new Meteor.Error('invalid-comment', 'You must comment on a post');                        // 14\n            comment = _.extend(commentAttributes, {                                                                    // 16\n                userId: user._id,                                                                                      // 17\n                author: user.username,                                                                                 // 18\n                submitted: new Date()                                                                                  // 19\n            });                                                                                                        //\n            // 更新帖子的评论数                                                                                                //\n            Posts.update(comment.postId, { $inc: { commentsCount: 1 } });                                              // 6\n            // return Comments.insert(comment);                                                                        //\n            // create the comment, save the id                                                                         //\n            comment._id = Comments.insert(comment);                                                                    // 6\n            // now create a notification, informing the user that there's been a comment                               //\n            createCommentNotification(comment);                                                                        // 6\n            return comment._id;                                                                                        // 28\n        }                                                                                                              //\n                                                                                                                       //\n        return commentInsert;                                                                                          //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"notifications.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// lib/notifications.js                                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nNotifications = new Mongo.Collection('notifications');                                                                 // 4\n                                                                                                                       //\nNotifications.allow({                                                                                                  // 6\n    update: function () {                                                                                              // 7\n        function update(userId, doc, fieldNames) {                                                                     // 7\n            return ownsDocument(userId, doc) && fieldNames.length === 1 && fieldNames[0] === 'read';                   // 8\n        }                                                                                                              //\n                                                                                                                       //\n        return update;                                                                                                 //\n    }()                                                                                                                //\n});                                                                                                                    //\n                                                                                                                       //\ncreateCommentNotification = function createCommentNotification(comment) {                                              // 13\n    var post = Posts.findOne(comment.postId);                                                                          // 14\n    if (comment.userId !== post.userId) {                                                                              // 15\n        Notifications.insert({                                                                                         // 16\n            userId: post.userId,                                                                                       // 17\n            postId: post._id,                                                                                          // 18\n            commentId: comment._id,                                                                                    // 19\n            commenterName: comment.author,                                                                             // 20\n            read: false                                                                                                // 21\n        });                                                                                                            //\n    }                                                                                                                  //\n};                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"permissions.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// lib/permissions.js                                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**                                                                                                                    //\n * Created by Administrator on 2016-06-12.                                                                             //\n */                                                                                                                    //\nownsDocument = function ownsDocument(userId, doc) {                                                                    // 4\n  return doc && doc.userId === userId;                                                                                 // 5\n};                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"router.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// lib/router.js                                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nRouter.configure({                                                                                                     // 1\n  layoutTemplate: 'layout',                                                                                            // 2\n  loadingTemplate: 'loading',                                                                                          // 3\n  notFoundTemplate: 'notFound',                                                                                        // 4\n  waitOn: function () {                                                                                                // 5\n    function waitOn() {                                                                                                // 5\n      return [Meteor.subscribe('notifications')];                                                                      // 6\n    }                                                                                                                  //\n                                                                                                                       //\n    return waitOn;                                                                                                     //\n  }()                                                                                                                  //\n});                                                                                                                    //\nPostsListController = RouteController.extend({                                                                         // 9\n  template: 'postsList',                                                                                               // 10\n  increment: 2,                                                                                                        // 11\n  postsLimit: function () {                                                                                            // 12\n    function postsLimit() {                                                                                            // 12\n      return parseInt(this.params.postsLimit) || this.increment;                                                       // 13\n    }                                                                                                                  //\n                                                                                                                       //\n    return postsLimit;                                                                                                 //\n  }(),                                                                                                                 //\n  findOptions: function () {                                                                                           // 15\n    function findOptions() {                                                                                           // 15\n      return { sort: { submitted: -1 }, limit: this.postsLimit() };                                                    // 16\n    }                                                                                                                  //\n                                                                                                                       //\n    return findOptions;                                                                                                //\n  }(),                                                                                                                 //\n  subscriptions: function () {                                                                                         // 18\n    function subscriptions() {                                                                                         // 18\n      this.postsSub = Meteor.subscribe('posts', this.findOptions());                                                   // 19\n    }                                                                                                                  //\n                                                                                                                       //\n    return subscriptions;                                                                                              //\n  }(),                                                                                                                 //\n  posts: function () {                                                                                                 // 21\n    function posts() {                                                                                                 // 21\n      return Posts.find({}, this.findOptions());                                                                       // 22\n    }                                                                                                                  //\n                                                                                                                       //\n    return posts;                                                                                                      //\n  }(),                                                                                                                 //\n  data: function () {                                                                                                  // 24\n    function data() {                                                                                                  // 24\n      var hasMore = this.posts().count() === this.postsLimit();                                                        // 25\n      var nextPath = this.route.path({ postsLimit: this.postsLimit() + this.increment });                              // 26\n      return {                                                                                                         // 27\n        posts: this.posts(),                                                                                           // 28\n        ready: this.postsSub.ready,                                                                                    // 29\n        nextPath: hasMore ? nextPath : null                                                                            // 30\n      };                                                                                                               //\n    }                                                                                                                  //\n                                                                                                                       //\n    return data;                                                                                                       //\n  }()                                                                                                                  //\n});                                                                                                                    //\nRouter.route('/posts/:_id', {                                                                                          // 34\n  name: 'postPage',                                                                                                    // 35\n  waitOn: function () {                                                                                                // 36\n    function waitOn() {                                                                                                // 36\n      return [Meteor.subscribe('singlePost', this.params._id), Meteor.subscribe('comments', this.params._id)];         // 37\n    }                                                                                                                  //\n                                                                                                                       //\n    return waitOn;                                                                                                     //\n  }(),                                                                                                                 //\n  data: function () {                                                                                                  // 42\n    function data() {                                                                                                  // 42\n      return Posts.findOne(this.params._id);                                                                           // 42\n    }                                                                                                                  //\n                                                                                                                       //\n    return data;                                                                                                       //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/posts/:_id/edit', {                                                                                     // 45\n  name: 'postEdit',                                                                                                    // 46\n  waitOn: function () {                                                                                                // 47\n    function waitOn() {                                                                                                // 47\n      return Meteor.subscribe('singlePost', this.params._id);                                                          // 48\n    }                                                                                                                  //\n                                                                                                                       //\n    return waitOn;                                                                                                     //\n  }(),                                                                                                                 //\n  data: function () {                                                                                                  // 50\n    function data() {                                                                                                  // 50\n      return Posts.findOne(this.params._id);                                                                           // 50\n    }                                                                                                                  //\n                                                                                                                       //\n    return data;                                                                                                       //\n  }()                                                                                                                  //\n});                                                                                                                    //\n                                                                                                                       //\nRouter.route('/submit', { name: 'postSubmit' });                                                                       // 53\n                                                                                                                       //\nRouter.route('/:postsLimit?', {                                                                                        // 55\n  name: 'postsList'                                                                                                    // 56\n});                                                                                                                    //\n                                                                                                                       //\nvar requireLogin = function requireLogin() {                                                                           // 59\n  if (!Meteor.user()) {                                                                                                // 60\n    if (Meteor.loggingIn()) {                                                                                          // 61\n      this.render(this.loadingTemplate);                                                                               // 62\n    } else {                                                                                                           //\n      this.render('accessDenied');                                                                                     // 64\n    }                                                                                                                  //\n  } else {                                                                                                             //\n    this.next();                                                                                                       // 67\n  }                                                                                                                    //\n};                                                                                                                     //\n                                                                                                                       //\nRouter.onBeforeAction('dataNotFound', { only: 'postPage' });                                                           // 71\nRouter.onBeforeAction(requireLogin, { only: 'postSubmit' });                                                           // 72\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"posts.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// collections/posts.js                                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nPosts = new Mongo.Collection('posts');                                                                                 // 1\nvalidatePost = function validatePost(post) {                                                                           // 2\n    var errors = {};                                                                                                   // 3\n    if (!post.title) errors.title = \"请填写标题\";                                                                           // 4\n    if (!post.url) errors.url = \"请填写 URL\";                                                                             // 6\n    return errors;                                                                                                     // 8\n};                                                                                                                     //\n/*允许用户编辑*/                                                                                                             //\nPosts.allow({                                                                                                          // 11\n    update: function () {                                                                                              // 12\n        function update(userId, post) {                                                                                // 12\n            return ownsDocument(userId, post);                                                                         // 12\n        }                                                                                                              //\n                                                                                                                       //\n        return update;                                                                                                 //\n    }(),                                                                                                               //\n    remove: function () {                                                                                              // 13\n        function remove(userId, post) {                                                                                // 13\n            return ownsDocument(userId, post);                                                                         // 13\n        }                                                                                                              //\n                                                                                                                       //\n        return remove;                                                                                                 //\n    }()                                                                                                                //\n});                                                                                                                    //\n/*限制用户编辑的字段*/                                                                                                          //\nPosts.deny({                                                                                                           // 16\n    update: function () {                                                                                              // 17\n        function update(userId, post, fieldNames) {                                                                    // 17\n            // 只能更改如下两个字段：                                                                                             //\n            return _.without(fieldNames, 'url', 'title').length > 0;                                                   // 19\n        }                                                                                                              //\n                                                                                                                       //\n        return update;                                                                                                 //\n    }()                                                                                                                //\n});                                                                                                                    //\n/*修改*/                                                                                                                 //\nPosts.deny({                                                                                                           // 23\n    update: function () {                                                                                              // 24\n        function update(userId, post, fieldNames, modifier) {                                                          // 24\n            var errors = validatePost(modifier.$set);                                                                  // 25\n            return errors.title || errors.url;                                                                         // 26\n        }                                                                                                              //\n                                                                                                                       //\n        return update;                                                                                                 //\n    }()                                                                                                                //\n});                                                                                                                    //\nMeteor.methods({                                                                                                       // 29\n    postInsert: function () {                                                                                          // 30\n        function postInsert(postAttributes) {                                                                          // 30\n            check(Meteor.userId(), String);                                                                            // 31\n            check(postAttributes, {                                                                                    // 32\n                title: String,                                                                                         // 33\n                url: String                                                                                            // 34\n            });                                                                                                        //\n            /*防止用户通过控制台来插入数据*/                                                                                         //\n            var errors = validatePost(postAttributes);                                                                 // 30\n            if (errors.title || errors.url) throw new Meteor.Error('invalid-post', \"你必须为你的帖子填写标题和 URL\");               // 38\n            /*防止重复*/                                                                                                   //\n            var postWithSameLink = Posts.findOne({ url: postAttributes.url });                                         // 30\n            if (postWithSameLink) {                                                                                    // 42\n                return {                                                                                               // 43\n                    postExists: true,                                                                                  // 44\n                    _id: postWithSameLink._id                                                                          // 45\n                };                                                                                                     //\n            }                                                                                                          //\n                                                                                                                       //\n            var user = Meteor.user();                                                                                  // 49\n            var post = _.extend(postAttributes, {                                                                      // 50\n                userId: user._id,                                                                                      // 51\n                author: user.username,                                                                                 // 52\n                submitted: new Date(),                                                                                 // 53\n                commentsCount: 0,                                                                                      // 54\n                upvoters: [],                                                                                          // 55\n                votes: 0                                                                                               // 56\n            });                                                                                                        //\n            var postId = Posts.insert(post);                                                                           // 58\n            return {                                                                                                   // 59\n                _id: postId                                                                                            // 60\n            };                                                                                                         //\n        }                                                                                                              //\n                                                                                                                       //\n        return postInsert;                                                                                             //\n    }(),                                                                                                               //\n    upvote: function () {                                                                                              // 64\n        function upvote(postId) {                                                                                      // 64\n            check(this.userId, String);                                                                                // 65\n            check(postId, String);                                                                                     // 66\n            var post = Posts.findOne(postId);                                                                          // 67\n            if (!post) throw new Meteor.Error('invalid', 'Post not found');                                            // 68\n            if (_.include(post.upvoters, this.userId)) throw new Meteor.Error('invalid', 'Already upvoted this post');\n            Posts.update(post._id, {                                                                                   // 72\n                $addToSet: { upvoters: this.userId },                                                                  // 73\n                $inc: { votes: 1 }                                                                                     // 74\n            });                                                                                                        //\n        }                                                                                                              //\n                                                                                                                       //\n        return upvote;                                                                                                 //\n    }()                                                                                                                //\n});                                                                                                                    //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/templates/application/template.layout.js\");\nrequire(\"./client/templates/application/template.not_found.js\");\nrequire(\"./client/templates/comments/template.comment_item.js\");\nrequire(\"./client/templates/comments/template.comment_submit.js\");\nrequire(\"./client/templates/includes/template.access_denied.js\");\nrequire(\"./client/templates/includes/template.errors.js\");\nrequire(\"./client/templates/includes/template.header.js\");\nrequire(\"./client/templates/includes/template.loading.js\");\nrequire(\"./client/templates/notifications/template.notifications.js\");\nrequire(\"./client/templates/posts/template.post_edit.js\");\nrequire(\"./client/templates/posts/template.post_item.js\");\nrequire(\"./client/templates/posts/template.post_list.js\");\nrequire(\"./client/templates/posts/template.post_page.js\");\nrequire(\"./client/templates/posts/template.post_submit.js\");\nrequire(\"./lib/comments.js\");\nrequire(\"./lib/notifications.js\");\nrequire(\"./lib/permissions.js\");\nrequire(\"./lib/router.js\");\nrequire(\"./client/templates/application/layout.js\");\nrequire(\"./client/templates/comments/comment_item.js\");\nrequire(\"./client/templates/comments/comment_submit.js\");\nrequire(\"./client/templates/includes/errors.js\");\nrequire(\"./client/templates/notifications/notifications.js\");\nrequire(\"./client/templates/posts/post_edit.js\");\nrequire(\"./client/templates/posts/post_item.js\");\nrequire(\"./client/templates/posts/post_list.js\");\nrequire(\"./client/templates/posts/post_page.js\");\nrequire(\"./client/templates/posts/post_submit.js\");\nrequire(\"./client/helpers/config.js\");\nrequire(\"./client/helpers/errors.js\");\nrequire(\"./collections/posts.js\");\nrequire(\"./client/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/templates/application/template.layout.js","/client/templates/application/template.not_found.js","/client/templates/comments/template.comment_item.js","/client/templates/comments/template.comment_submit.js","/client/templates/comments/comment_item.js","/client/templates/comments/comment_submit.js","/client/templates/includes/template.access_denied.js","/client/templates/includes/template.errors.js","/client/templates/includes/template.header.js","/client/templates/includes/template.loading.js","/client/templates/includes/errors.js","/client/templates/notifications/template.notifications.js","/client/templates/notifications/notifications.js","/client/templates/posts/template.post_edit.js","/client/templates/posts/template.post_item.js","/client/templates/posts/template.post_list.js","/client/templates/posts/template.post_page.js","/client/templates/posts/template.post_submit.js","/client/templates/posts/post_edit.js","/client/templates/posts/post_item.js","/client/templates/posts/post_list.js","/client/templates/posts/post_page.js","/client/templates/posts/post_submit.js","/client/helpers/config.js","/client/helpers/errors.js","/lib/comments.js","/lib/notifications.js","/lib/permissions.js","/lib/router.js","/collections/posts.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;ACrBA,SAAS,WAAT,CAAqB,OAArB,CAA6B;AACzB;AAAe,iCAAW;AACtB,mBAAO,KAAK,SAAL,CAAe,QAAf,EAAP,CADsB;SAAX;;;OAAf;CADJ,wH;;;;;;;;;;;;;;ACAA,SAAS,aAAT,CAAuB,SAAvB,CAAiC,YAAW;AACxC,YAAQ,GAAR,CAAY,qBAAZ,EAAmC,EAAnC,EADwC;CAAX,CAAjC;;AAIA,SAAS,aAAT,CAAuB,OAAvB,CAA+B;AAC3B;AAAc,8BAAS,KAAT,EAAgB;AAC1B,mBAAO,QAAQ,GAAR,CAAY,qBAAZ,EAAmC,KAAnC,CAAP,CAD0B;SAAhB;;;OAAd;AAGA;AAAY,4BAAU,KAAV,EAAiB;AACzB,mBAAO,CAAC,CAAC,QAAQ,GAAR,CAAY,qBAAZ,EAAmC,KAAnC,CAAD,GAA6C,WAA9C,GAA4D,EAA5D,CADkB;SAAjB;;;OAAZ;CAJJ;;AASA,SAAS,aAAT,CAAuB,MAAvB,CAA8B;AAC1B;AAAe,4BAAS,CAAT,EAAY,QAAZ,EAAsB;AACjC,cAAE,cAAF,GADiC;;AAGjC,gBAAI,QAAQ,EAAE,EAAE,MAAF,CAAF,CAAY,IAAZ,CAAiB,aAAjB,CAAR,CAH6B;AAIjC,gBAAI,UAAU;AACV,sBAAM,MAAM,GAAN,EAAN;AACA,wBAAQ,SAAS,IAAT,CAAc,GAAd;aAFR,CAJ6B;;AASjC,gBAAI,SAAS,EAAT,CAT6B;AAUjC,gBAAI,CAAE,QAAQ,IAAR,EAAc;AAChB,uBAAO,IAAP,GAAc,2BAAd,CADgB;AAEhB,uBAAO,QAAQ,GAAR,CAAY,qBAAZ,EAAmC,MAAnC,CAAP,CAFgB;aAApB;;AAKA,mBAAO,IAAP,CAAY,eAAZ,EAA6B,OAA7B,EAAsC,UAAS,KAAT,EAAgB,SAAhB,EAA2B;AAC7D,oBAAI,KAAJ,EAAU;AACN,+BAAW,MAAM,MAAN,CAAX,CADM;iBAAV,MAEO;AACH,0BAAM,GAAN,CAAU,EAAV,EADG;iBAFP;aADkC,CAAtC,CAfiC;SAAtB;;;OAAf;CADJ,wH;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA,2H;;;;;;;;;;;;;;ACHA,SAAS,MAAT,CAAgB,OAAhB,CAAwB;AACpB;AAAQ,0BAAW;AACf,mBAAO,OAAO,IAAP,EAAP,CADe;SAAX;;;OAAR;CADJ;AAKA,SAAS,KAAT,CAAe,UAAf,CAA0B,YAAW;AACjC,QAAI,QAAQ,KAAK,IAAL,CADqB;AAEjC,WAAO,UAAP,CAAkB,YAAY;AAC1B,eAAO,MAAP,CAAc,MAAM,GAAN,CAAd,CAD0B;KAAZ,EAEf,IAFH,EAFiC;CAAX,CAA1B,uH;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;;;;ACvCA,SAAS,aAAT,CAAuB,OAAvB,CAA+B;AAC3B;AAAe,iCAAW;AACtB,mBAAO,cAAc,IAAd,CAAmB,EAAC,QAAQ,OAAO,MAAP,EAAR,EAAyB,MAAM,KAAN,EAA7C,CAAP,CADsB;SAAX;;;OAAf;AAGA;AAAmB,qCAAU;AACzB,mBAAO,cAAc,IAAd,CAAmB,EAAC,QAAQ,OAAO,MAAP,EAAR,EAAyB,MAAM,KAAN,EAA7C,EAA2D,KAA3D,EAAP,CADyB;SAAV;;;OAAnB;CAJJ;;AASA,SAAS,gBAAT,CAA0B,OAA1B,CAAkC;AAC9B;AAAsB,wCAAW;AAC7B,mBAAO,OAAO,MAAP,CAAc,QAAd,CAAuB,IAAvB,CAA4B,EAAC,KAAK,KAAK,MAAL,EAAlC,CAAP,CAD6B;SAAX;;;OAAtB;CADJ;;AAMA,SAAS,gBAAT,CAA0B,MAA1B,CAAiC;AAC7B;AAAW,0BAAW;AAClB,0BAAc,MAAd,CAAqB,KAAK,GAAL,EAAU,EAAC,MAAM,EAAC,MAAM,IAAN,EAAP,EAAhC,EADkB;SAAX;;;OAAX;CADJ,wH;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4H;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","file":"/app.js","sourcesContent":["\nTemplate.__checkName(\"layout\");\nTemplate[\"layout\"] = new Template(\"Template.layout\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"container\"\n  }, \"\\n\\n        \", Spacebars.include(view.lookupTemplate(\"header\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"errors\")), \"\\n        \", HTML.DIV({\n    id: \"main\",\n    \"class\": \"row-fluid\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"yield\")), \"\\n        \"), \"\\n    \");\n}));\n","\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"not-found jumbotron\">\\n        <h2>404</h2>\\n        <p>Sorry, we couldn\\'t find a page at this address. 抱歉，我们无法找到该页面。</p>\\n    </div>');\n}));\n","\nTemplate.__checkName(\"commentItem\");\nTemplate[\"commentItem\"] = new Template(\"Template.commentItem\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", HTML.H4(\"\\n            \", HTML.SPAN({\n    \"class\": \"author\"\n  }, Blaze.View(\"lookup:author\", function() {\n    return Spacebars.mustache(view.lookup(\"author\"));\n  })), \"\\n            \", HTML.SPAN({\n    \"class\": \"date\"\n  }, \"on \", Blaze.View(\"lookup:submittedText\", function() {\n    return Spacebars.mustache(view.lookup(\"submittedText\"));\n  })), \"\\n        \"), \"\\n        \", HTML.P(Blaze.View(\"lookup:body\", function() {\n    return Spacebars.mustache(view.lookup(\"body\"));\n  })), \"\\n    \");\n}));\n","\nTemplate.__checkName(\"commentSubmit\");\nTemplate[\"commentSubmit\"] = new Template(\"Template.commentSubmit\", (function() {\n  var view = this;\n  return HTML.FORM({\n    name: \"comment\",\n    \"class\": \"comment-form form\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": function() {\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"body\") ];\n    }\n  }, \"\\n            \", HTML.DIV({\n    \"class\": \"controls\"\n  }, \"\\n                \", HTML.Raw('<label for=\"body\">Comment on this post</label>'), \"\\n                \", HTML.TEXTAREA({\n    name: \"body\",\n    id: \"body\",\n    \"class\": \"form-control\",\n    rows: \"3\"\n  }), \"\\n                \", HTML.SPAN({\n    \"class\": \"help-block\"\n  }, Blaze.View(\"lookup:errorMessage\", function() {\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"body\");\n  })), \"\\n            \"), \"\\n        \"), HTML.Raw('\\n        <button type=\"submit\" class=\"btn btn-primary\">Add Comment</button>\\n    '));\n}));\n","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nTemplate.commentItem.helpers({\r\n    submittedText: function() {\r\n        return this.submitted.toString();\r\n    }\r\n});","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nTemplate.commentSubmit.onCreated(function() {\r\n    Session.set('commentSubmitErrors', {});\r\n});\r\n\r\nTemplate.commentSubmit.helpers({\r\n    errorMessage: function(field) {\r\n        return Session.get('commentSubmitErrors')[field];\r\n    },\r\n    errorClass: function (field) {\r\n        return !!Session.get('commentSubmitErrors')[field] ? 'has-error' : '';\r\n    }\r\n});\r\n\r\nTemplate.commentSubmit.events({\r\n    'submit form': function(e, template) {\r\n        e.preventDefault();\r\n\r\n        var $body = $(e.target).find('[name=body]');\r\n        var comment = {\r\n            body: $body.val(),\r\n            postId: template.data._id\r\n        };\r\n\r\n        var errors = {};\r\n        if (! comment.body) {\r\n            errors.body = \"Please write some content\";\r\n            return Session.set('commentSubmitErrors', errors);\r\n        }\r\n\r\n        Meteor.call('commentInsert', comment, function(error, commentId) {\r\n            if (error){\r\n                throwError(error.reason);\r\n            } else {\r\n                $body.val('');\r\n            }\r\n        });\r\n    }\r\n});","\nTemplate.__checkName(\"accessDenied\");\nTemplate[\"accessDenied\"] = new Template(\"Template.accessDenied\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"access-denied jumbotron\">\\n        <h2>Access Denied</h2>\\n        <p>You can\\'t get here! Please log in.</p>\\n    </div>');\n}));\n","\nTemplate.__checkName(\"errors\");\nTemplate[\"errors\"] = new Template(\"Template.errors\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"errors\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"errors\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"error\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"error\");\nTemplate[\"error\"] = new Template(\"Template.error\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"alert alert-danger\",\n    role: \"alert\"\n  }, HTML.Raw('\\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\">&times;</button>\\n        '), Blaze.View(\"lookup:message\", function() {\n    return Spacebars.mustache(view.lookup(\"message\"));\n  }), \"\\n    \");\n}));\n","\nTemplate.__checkName(\"header\");\nTemplate[\"header\"] = new Template(\"Template.header\", (function() {\n  var view = this;\n  return HTML.NAV({\n    \"class\": \"navbar navbar-default\",\n    role: \"navigation\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": \"navbar-header\"\n  }, \"\\n            \", HTML.Raw('<button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navigation\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </button>'), \"\\n            \", HTML.A({\n    \"class\": \"navbar-brand\",\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"postsList\");\n    }\n  }, \"Microscope\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    \"class\": \"collapse navbar-collapse\",\n    id: \"navigation\"\n  }, \"\\n            \", HTML.UL({\n    \"class\": \"nav navbar-nav\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n                    \", HTML.LI(\"\\n                        \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"postSubmit\");\n      }\n    }, \"Submit Post\"), \"\\n                    \"), \"\\n                    \", HTML.LI({\n      \"class\": \"dropdown\"\n    }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"notifications\")), \"\\n                    \"), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n            \", HTML.UL({\n    \"class\": \"nav navbar-nav navbar-right\"\n  }, \"\\n                \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n","\nTemplate.__checkName(\"loading\");\nTemplate[\"loading\"] = new Template(\"Template.loading\", (function() {\n  var view = this;\n  return \"loading````\";\n}));\n","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nTemplate.errors.helpers({\r\n    errors: function() {\r\n        return Errors.find();\r\n    }\r\n});\r\nTemplate.error.onRendered(function() {\r\n    var error = this.data;\r\n    Meteor.setTimeout(function () {\r\n        Errors.remove(error._id);\r\n    }, 3000);\r\n});","\nTemplate.__checkName(\"notifications\");\nTemplate[\"notifications\"] = new Template(\"Template.notifications\", (function() {\n  var view = this;\n  return [ HTML.A({\n    href: \"#\",\n    \"class\": \"dropdown-toggle\",\n    \"data-toggle\": \"dropdown\"\n  }, \"\\n        Notifications\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"notificationCount\"));\n  }, function() {\n    return [ \"\\n            \", HTML.SPAN({\n      \"class\": \"badge badge-inverse\"\n    }, Blaze.View(\"lookup:notificationCount\", function() {\n      return Spacebars.mustache(view.lookup(\"notificationCount\"));\n    })), \"\\n        \" ];\n  }), \"\\n        \", HTML.Raw('<b class=\"caret\"></b>'), \"\\n    \"), \"\\n    \", HTML.UL({\n    \"class\": \"notification dropdown-menu\"\n  }, \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"notificationCount\"));\n  }, function() {\n    return [ \"\\n            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"notifications\"));\n    }, function() {\n      return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"notificationItem\")), \"\\n            \" ];\n    }), \"\\n        \" ];\n  }, function() {\n    return [ \"\\n            \", HTML.LI(HTML.SPAN(\"No Notifications\")), \"\\n        \" ];\n  }), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"notificationItem\");\nTemplate[\"notificationItem\"] = new Template(\"Template.notificationItem\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n        \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"notificationPostPath\"));\n    }\n  }, \"\\n            \", HTML.STRONG(Blaze.View(\"lookup:commenterName\", function() {\n    return Spacebars.mustache(view.lookup(\"commenterName\"));\n  })), \" commented on your post\\n        \"), \"\\n    \");\n}));\n","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nTemplate.notifications.helpers({\r\n    notifications: function() {\r\n        return Notifications.find({userId: Meteor.userId(), read: false});\r\n    },\r\n    notificationCount: function(){\r\n        return Notifications.find({userId: Meteor.userId(), read: false}).count();\r\n    }\r\n});\r\n\r\nTemplate.notificationItem.helpers({\r\n    notificationPostPath: function() {\r\n        return Router.routes.postPage.path({_id: this.postId});\r\n    }\r\n});\r\n\r\nTemplate.notificationItem.events({\r\n    'click a': function() {\r\n        Notifications.update(this._id, {$set: {read: true}});\r\n    }\r\n});","\nTemplate.__checkName(\"postEdit\");\nTemplate[\"postEdit\"] = new Template(\"Template.postEdit\", (function() {\n  var view = this;\n  return HTML.FORM({\n    \"class\": \"main form\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": function() {\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"url\") ];\n    }\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"url\">URL</label>'), \"\\n            \", HTML.DIV({\n    \"class\": \"controls\"\n  }, \"\\n                \", HTML.INPUT({\n    name: \"url\",\n    id: \"url\",\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"url\"));\n    },\n    placeholder: \"Your URL\",\n    \"class\": \"form-control\"\n  }), \"\\n                \", HTML.SPAN({\n    \"class\": \"help-block\"\n  }, Blaze.View(\"lookup:errorMessage\", function() {\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"url\");\n  })), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    \"class\": function() {\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"title\") ];\n    }\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"title\">Title</label>'), \"\\n            \", HTML.DIV({\n    \"class\": \"controls\"\n  }, \"\\n                \", HTML.INPUT({\n    name: \"title\",\n    id: \"title\",\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"title\"));\n    },\n    placeholder: \"Name your post\",\n    \"class\": \"form-control\"\n  }), \"\\n                \", HTML.SPAN({\n    \"class\": \"help-block\"\n  }, Blaze.View(\"lookup:errorMessage\", function() {\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"title\");\n  })), \"\\n            \"), \"\\n        \"), HTML.Raw('\\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary submit\">\\n        <hr>\\n        <a class=\"btn btn-danger delete\" href=\"#\">Delete post</a>\\n    '));\n}));\n","\nTemplate.__checkName(\"postItem\");\nTemplate[\"postItem\"] = new Template(\"Template.postItem\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"post\"\n  }, \"\\n    \", HTML.A({\n    href: \"#\",\n    \"class\": function() {\n      return [ \"upvote btn btn-default \", Spacebars.mustache(view.lookup(\"upvotedClass\")) ];\n    }\n  }, \"⬆\"), \"\\n    \", HTML.DIV({\n    \"class\": \"post-content\"\n  }, \"\\n        \", HTML.H3(HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"url\"));\n    }\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), HTML.SPAN(Blaze.View(\"lookup:domain\", function() {\n    return Spacebars.mustache(view.lookup(\"domain\"));\n  }))), \"\\n        \", HTML.P(\"\\n            \", Blaze.View(\"lookup:votes\", function() {\n    return Spacebars.mustache(view.lookup(\"votes\"));\n  }), \" Votes,\\n            submitted by \", Blaze.View(\"lookup:author\", function() {\n    return Spacebars.mustache(view.lookup(\"author\"));\n  }), \",\\n            \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"postPage\");\n    }\n  }, Blaze.View(\"lookup:commentsCount\", function() {\n    return Spacebars.mustache(view.lookup(\"commentsCount\"));\n  }), \" comments\"), \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"ownPost\"));\n  }, function() {\n    return HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"postEdit\");\n      }\n    }, \"Edit\");\n  }), \"\\n        \"), \"\\n    \"), \"\\n    \", HTML.A({\n    href: function() {\n      return Spacebars.mustache(view.lookup(\"pathFor\"), \"postPage\");\n    },\n    \"class\": \"discuss btn btn-default\"\n  }, \"Discuss\"), \"\\n\");\n}));\n","\nTemplate.__checkName(\"postsList\");\nTemplate[\"postsList\"] = new Template(\"Template.postsList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"posts\"\n  }, \"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"posts\"));\n  }, function() {\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"postItem\")), \"\\n    \" ];\n  }), \"\\n      \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"nextPath\"));\n  }, function() {\n    return [ \"\\n          \", HTML.A({\n      \"class\": \"load-more\",\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"nextPath\"));\n      }\n    }, \"Load more\"), \"\\n          \" ];\n  }, function() {\n    return [ \"\\n          \", HTML.P({\n      \"class\": \"bg-info\"\n    }, \"没有更多了·····\"), \"\\n\\n      \" ];\n  }), \"\\n  \");\n}));\n","\nTemplate.__checkName(\"postPage\");\nTemplate[\"postPage\"] = new Template(\"Template.postPage\", (function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"postItem\")), \"\\n    \", HTML.UL({\n    \"class\": \"comments\"\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"comments\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"commentItem\")), \"\\n        \" ];\n  }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"commentSubmit\")), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", HTML.P(\"Please log in to leave a comment.\"), \"\\n    \" ];\n  }) ];\n}));\n","\nTemplate.__checkName(\"postSubmit\");\nTemplate[\"postSubmit\"] = new Template(\"Template.postSubmit\", (function() {\n  var view = this;\n  return HTML.FORM({\n    \"class\": \"main form\"\n  }, \"\\n        \", HTML.DIV({\n    \"class\": function() {\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"url\") ];\n    }\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"url\">URL</label>'), \"\\n            \", HTML.DIV({\n    \"class\": \"controls\"\n  }, \"\\n                \", HTML.Raw('<input name=\"url\" id=\"url\" type=\"text\" value=\"\" placeholder=\"Your URL\" class=\"form-control\">'), \"\\n                \", HTML.SPAN({\n    \"class\": \"help-block\"\n  }, Blaze.View(\"lookup:errorMessage\", function() {\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"url\");\n  })), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    \"class\": function() {\n      return [ \"form-group \", Spacebars.mustache(view.lookup(\"errorClass\"), \"title\") ];\n    }\n  }, \"\\n            \", HTML.Raw('<label class=\"control-label\" for=\"title\">Title</label>'), \"\\n            \", HTML.DIV({\n    \"class\": \"controls\"\n  }, \"\\n                \", HTML.Raw('<input name=\"title\" id=\"title\" type=\"text\" value=\"\" placeholder=\"Name your post\" class=\"form-control\">'), \"\\n                \", HTML.SPAN({\n    \"class\": \"help-block\"\n  }, Blaze.View(\"lookup:errorMessage\", function() {\n    return Spacebars.mustache(view.lookup(\"errorMessage\"), \"title\");\n  })), \"\\n            \"), \"\\n        \"), HTML.Raw('\\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\">\\n    '));\n}));\n","Template.postEdit.onCreated(function() {\r\n    Session.set('postEditErrors', {});\r\n});\r\nTemplate.postEdit.helpers({\r\n    errorMessage: function(field) {\r\n        return Session.get('postEditErrors')[field];\r\n    },\r\n    errorClass: function (field) {\r\n        return !!Session.get('postEditErrors')[field] ? 'has-error' : '';\r\n    }\r\n});\r\n\r\nTemplate.postEdit.events({\r\n    'submit form': function(e) {\r\n        e.preventDefault();\r\n\r\n        var currentPostId = this._id;\r\n\r\n        var postProperties = {\r\n            url: $(e.target).find('[name=url]').val(),\r\n            title: $(e.target).find('[name=title]').val()\r\n        }\r\n\r\n        var errors = validatePost(postProperties);\r\n        if (errors.title || errors.url)\r\n            return Session.set('postEditErrors', errors);\r\n\r\n        Posts.update(currentPostId, {$set: postProperties}, function(error) {\r\n            if (error) {\r\n                // 向用户显示错误消息\r\n                throwError(error.reason);\r\n            } else {\r\n                Router.go('postPage', {_id: currentPostId});\r\n            }\r\n        });\r\n    },\r\n\r\n    'click .delete': function(e) {\r\n        e.preventDefault();\r\n\r\n        if (confirm(\"Delete this post?\")) {\r\n            var currentPostId = this._id;\r\n            Posts.remove(currentPostId);\r\n            Router.go('postsList');\r\n        }\r\n    }\r\n});","Template.postItem.helpers({\n  ownPost: function() {\n    return this.userId === Meteor.userId();\n  },\n  domain: function() {\n    var a = document.createElement('a');\n    a.href = this.url;//this 是模版each的遍历对象\n    return a.hostname;\n  },\n  commentsCount: function() {\n    return Comments.find({postId: this._id}).count();\n  },\n  upvotedClass: function() {\n    var userId = Meteor.userId();\n    if (userId && !_.include(this.upvoters, userId)) {\n      return 'btn-primary upvotable';\n    } else {\n      return 'disabled';\n    }\n  }\n});\nTemplate.postItem.events({\n  'click .upvote': function(e) {\n    e.preventDefault();\n    Meteor.call('upvote', this._id);\n  }\n});\n","Template.postsList.helpers({\n  // posts: function() {\n  //   return Posts.find({},{sort:{submitted:-1}});\n  // }\n});","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nTemplate.postPage.helpers({\r\n    comments: function() {\r\n        return Comments.find({postId: this._id});\r\n    }\r\n});","/**\r\n * Created by Administrator on 2016-06-10.\r\n */\r\nTemplate.postSubmit.onCreated(function() {\r\n    Session.set('postSubmitErrors', {});\r\n});\r\nTemplate.postSubmit.helpers({\r\n    errorMessage: function(field) {\r\n        return Session.get('postSubmitErrors')[field];\r\n    },\r\n    errorClass: function (field) {\r\n        return !!Session.get('postSubmitErrors')[field] ? 'has-error' : '';\r\n    }\r\n});\r\nTemplate.postSubmit.events({\r\n    'submit form': function(e) {\r\n        e.preventDefault();\r\n\r\n        var post = {\r\n            url: $(e.target).find('[name=url]').val(),\r\n            title: $(e.target).find('[name=title]').val()\r\n        };\r\n        var errors = validatePost(post);\r\n        if (errors.title || errors.url)\r\n            return Session.set('postSubmitErrors', errors);\r\n        Meteor.call('postInsert', post, function(error, result) {\r\n            // 显示错误信息并退出\r\n            if (error)\r\n                return throwError(error.reason);\r\n            // 显示结果，跳转页面\r\n            if (result.postExists)\r\n                return throwError('链接已存在');;\r\n            Router.go('postPage', {_id: result._id});\r\n        });\r\n    }\r\n});","/**\r\n * Created by Administrator on 2016-06-10.\r\n */\r\n//通过用户名注册或者登录\r\nAccounts.ui.config({\r\n    passwordSignupFields: 'USERNAME_ONLY'\r\n})","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nErrors = new Mongo.Collection(null);\r\nthrowError = function(message) {\r\n    Errors.insert({message: message});\r\n};","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nComments = new Mongo.Collection('comments');\r\nMeteor.methods({\r\n    commentInsert: function(commentAttributes) {\r\n        check(this.userId, String);\r\n        check(commentAttributes, {\r\n            postId: String,\r\n            body: String\r\n        });\r\n        var user = Meteor.user();\r\n        var post = Posts.findOne(commentAttributes.postId);\r\n        if (!post)\r\n            throw new Meteor.Error('invalid-comment', 'You must comment on a post');\r\n        comment = _.extend(commentAttributes, {\r\n            userId: user._id,\r\n            author: user.username,\r\n            submitted: new Date()\r\n        });\r\n        // 更新帖子的评论数\r\n        Posts.update(comment.postId, {$inc: {commentsCount: 1}});\r\n        // return Comments.insert(comment);\r\n        // create the comment, save the id\r\n        comment._id = Comments.insert(comment);\r\n        // now create a notification, informing the user that there's been a comment\r\n        createCommentNotification(comment);\r\n        return comment._id;\r\n    }\r\n});","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nNotifications = new Mongo.Collection('notifications');\r\n\r\nNotifications.allow({\r\n    update: function(userId, doc, fieldNames) {\r\n        return ownsDocument(userId, doc) &&\r\n            fieldNames.length === 1 && fieldNames[0] === 'read';\r\n    }\r\n});\r\n\r\ncreateCommentNotification = function(comment) {\r\n    var post = Posts.findOne(comment.postId);\r\n    if (comment.userId !== post.userId) {\r\n        Notifications.insert({\r\n            userId: post.userId,\r\n            postId: post._id,\r\n            commentId: comment._id,\r\n            commenterName: comment.author,\r\n            read: false\r\n        });\r\n    }\r\n};","/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nownsDocument = function(userId, doc) {\r\n    return doc && doc.userId === userId;\r\n}","Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n  waitOn: function() {\n    return [Meteor.subscribe('notifications')]\n  }\n});\nPostsListController = RouteController.extend({\n  template: 'postsList',\n  increment: 2,\n  postsLimit: function() {\n    return parseInt(this.params.postsLimit) || this.increment;\n  },\n  findOptions: function() {\n    return {sort: {submitted: -1}, limit: this.postsLimit()};\n  },\n  subscriptions: function() {\n    this.postsSub = Meteor.subscribe('posts', this.findOptions());\n  },\n  posts: function() {\n    return Posts.find({}, this.findOptions());\n  },\n  data: function() {\n    var hasMore = this.posts().count() === this.postsLimit();\n    var nextPath = this.route.path({postsLimit: this.postsLimit() + this.increment});\n    return {\n      posts: this.posts(),\n      ready: this.postsSub.ready,\n      nextPath: hasMore ? nextPath : null\n    };\n  }\n});\nRouter.route('/posts/:_id', {\n  name: 'postPage',\n  waitOn: function() {\n    return [\n      Meteor.subscribe('singlePost', this.params._id),\n      Meteor.subscribe('comments', this.params._id)\n    ];\n  },\n  data: function() { return Posts.findOne(this.params._id); }\n});\n\nRouter.route('/posts/:_id/edit', {\n  name: 'postEdit',\n  waitOn: function() {\n    return Meteor.subscribe('singlePost', this.params._id);\n  },\n  data: function() { return Posts.findOne(this.params._id); }\n});\n\nRouter.route('/submit', {name: 'postSubmit'});\n\nRouter.route('/:postsLimit?', {\n  name: 'postsList',\n});\n\nvar requireLogin = function() {\n  if (! Meteor.user()) {\n    if (Meteor.loggingIn()) {\n      this.render(this.loadingTemplate);\n    } else {\n      this.render('accessDenied');\n    }\n  } else {\n    this.next();\n  }\n}\n\nRouter.onBeforeAction('dataNotFound', {only: 'postPage'});\nRouter.onBeforeAction(requireLogin, {only: 'postSubmit'});","Posts = new Mongo.Collection('posts');\r\nvalidatePost = function (post) {\r\n    var errors = {};\r\n    if (!post.title)\r\n        errors.title = \"请填写标题\";\r\n    if (!post.url)\r\n        errors.url =  \"请填写 URL\";\r\n    return errors;\r\n};\r\n/*允许用户编辑*/\r\nPosts.allow({\r\n    update: function(userId, post) { return ownsDocument(userId, post); },\r\n    remove: function(userId, post) { return ownsDocument(userId, post); }\r\n});\r\n/*限制用户编辑的字段*/\r\nPosts.deny({\r\n    update: function(userId, post, fieldNames) {\r\n        // 只能更改如下两个字段：\r\n        return (_.without(fieldNames, 'url', 'title').length > 0);\r\n    }\r\n});\r\n/*修改*/\r\nPosts.deny({\r\n    update: function(userId, post, fieldNames, modifier) {\r\n        var errors = validatePost(modifier.$set);\r\n        return errors.title || errors.url;\r\n    }\r\n});\r\nMeteor.methods({\r\n    postInsert: function(postAttributes) {\r\n        check(Meteor.userId(), String);\r\n        check(postAttributes, {\r\n            title: String,\r\n            url: String\r\n        });\r\n        /*防止用户通过控制台来插入数据*/\r\n         var errors = validatePost(postAttributes);\r\n        if (errors.title || errors.url)\r\n            throw new Meteor.Error('invalid-post', \"你必须为你的帖子填写标题和 URL\");\r\n        /*防止重复*/\r\n        var postWithSameLink = Posts.findOne({url: postAttributes.url});\r\n        if (postWithSameLink) {\r\n            return {\r\n                postExists: true,\r\n                _id: postWithSameLink._id\r\n            }\r\n        }\r\n\r\n        var user = Meteor.user();\r\n        var post = _.extend(postAttributes, {\r\n            userId: user._id,\r\n            author: user.username,\r\n            submitted: new Date(),\r\n            commentsCount: 0,\r\n            upvoters: [],\r\n            votes: 0\r\n        });\r\n        var postId = Posts.insert(post);\r\n        return {\r\n            _id: postId\r\n        };\r\n\r\n    },\r\n    upvote: function(postId) {\r\n        check(this.userId, String);\r\n        check(postId, String);\r\n        var post = Posts.findOne(postId);\r\n        if (!post)\r\n            throw new Meteor.Error('invalid', 'Post not found');\r\n        if (_.include(post.upvoters, this.userId))\r\n            throw new Meteor.Error('invalid', 'Already upvoted this post');\r\n        Posts.update(post._id, {\r\n            $addToSet: {upvoters: this.userId},\r\n            $inc: {votes: 1}\r\n        });\r\n    }\r\n});"]}}]