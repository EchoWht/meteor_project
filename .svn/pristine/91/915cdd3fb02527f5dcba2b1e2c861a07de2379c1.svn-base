{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/lib/router.js","filenameRelative":"/lib/router.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/router.js.map","sourceFileName":"/lib/router.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"router"},"ignored":false,"code":"Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n  waitOn: function () {\n    function waitOn() {\n      return [Meteor.subscribe('notifications')];\n    }\n\n    return waitOn;\n  }()\n});\nPostsListController = RouteController.extend({\n  template: 'postsList',\n  increment: 5,\n  postsLimit: function () {\n    function postsLimit() {\n      return parseInt(this.params.postsLimit) || this.increment;\n    }\n\n    return postsLimit;\n  }(),\n  findOptions: function () {\n    function findOptions() {\n      return { sort: this.sort, limit: this.postsLimit() };\n    }\n\n    return findOptions;\n  }(),\n  subscriptions: function () {\n    function subscriptions() {\n      this.postsSub = Meteor.subscribe('posts', this.findOptions());\n    }\n\n    return subscriptions;\n  }(),\n  posts: function () {\n    function posts() {\n      return Posts.find({}, this.findOptions());\n    }\n\n    return posts;\n  }(),\n  data: function () {\n    function data() {\n      var hasMore = this.posts().count() === this.postsLimit();\n      return {\n        posts: this.posts(),\n        ready: this.postsSub.ready,\n        nextPath: hasMore ? this.nextPath() : null\n      };\n    }\n\n    return data;\n  }()\n});\nNewPostsController = PostsListController.extend({\n  sort: { submitted: -1, _id: -1 },\n  nextPath: function () {\n    function nextPath() {\n      return Router.routes.newPosts.path({ postsLimit: this.postsLimit() + this.increment });\n    }\n\n    return nextPath;\n  }()\n});\nBestPostsController = PostsListController.extend({\n  sort: { votes: -1, submitted: -1, _id: -1 },\n  nextPath: function () {\n    function nextPath() {\n      return Router.routes.bestPosts.path({ postsLimit: this.postsLimit() + this.increment });\n    }\n\n    return nextPath;\n  }()\n});\nRouter.route('/', {\n  name: 'home',\n  controller: NewPostsController\n});\nRouter.route('/new/:postsLimit?', { name: 'newPosts' });\nRouter.route('/best/:postsLimit?', { name: 'bestPosts' });\nRouter.route('/posts/:_id', {\n  name: 'postPage',\n  waitOn: function () {\n    function waitOn() {\n      return [Meteor.subscribe('singlePost', this.params._id), Meteor.subscribe('comments', this.params._id)];\n    }\n\n    return waitOn;\n  }(),\n  data: function () {\n    function data() {\n      return Posts.findOne(this.params._id);\n    }\n\n    return data;\n  }()\n});\n\nRouter.route('/posts/:_id/edit', {\n  name: 'postEdit',\n  waitOn: function () {\n    function waitOn() {\n      return Meteor.subscribe('singlePost', this.params._id);\n    }\n\n    return waitOn;\n  }(),\n  data: function () {\n    function data() {\n      return Posts.findOne(this.params._id);\n    }\n\n    return data;\n  }()\n});\n\nRouter.route('/submit', { name: 'postSubmit' });\n\nRouter.route('/:postsLimit?', {\n  name: 'postsList'\n});\n\nvar requireLogin = function requireLogin() {\n  if (!Meteor.user()) {\n    if (Meteor.loggingIn()) {\n      this.render(this.loadingTemplate);\n    } else {\n      this.render('accessDenied');\n    }\n  } else {\n    this.next();\n  }\n};\n\nRouter.onBeforeAction('dataNotFound', { only: 'postPage' });\nRouter.onBeforeAction(requireLogin, { only: 'postSubmit' });","ast":null,"map":{"version":3,"sources":["/lib/router.js"],"names":[],"mappings":"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","file":"/lib/router.js.map","sourcesContent":["Router.configure({\n  layoutTemplate: 'layout',\n  loadingTemplate: 'loading',\n  notFoundTemplate: 'notFound',\n  waitOn: function() {\n    return [Meteor.subscribe('notifications')]\n  }\n});\nPostsListController = RouteController.extend({\n  template: 'postsList',\n  increment: 5,\n  postsLimit: function() {\n    return parseInt(this.params.postsLimit) || this.increment;\n  },\n  findOptions: function() {\n    return {sort: this.sort, limit: this.postsLimit()};\n  },\n  subscriptions: function() {\n    this.postsSub = Meteor.subscribe('posts', this.findOptions());\n  },\n  posts: function() {\n    return Posts.find({}, this.findOptions());\n  },\n  data: function() {\n    var hasMore = this.posts().count() === this.postsLimit();\n    return {\n      posts: this.posts(),\n      ready: this.postsSub.ready,\n      nextPath: hasMore ? this.nextPath() : null\n    };\n  }\n});\nNewPostsController = PostsListController.extend({\n  sort: {submitted: -1, _id: -1},\n  nextPath: function() {\n    return Router.routes.newPosts.path({postsLimit: this.postsLimit() + this.increment})\n  }\n});\nBestPostsController = PostsListController.extend({\n  sort: {votes: -1, submitted: -1, _id: -1},\n  nextPath: function() {\n    return Router.routes.bestPosts.path({postsLimit: this.postsLimit() + this.increment})\n  }\n});\nRouter.route('/', {\n  name: 'home',\n  controller: NewPostsController\n});\nRouter.route('/new/:postsLimit?', {name: 'newPosts'});\nRouter.route('/best/:postsLimit?', {name: 'bestPosts'});\nRouter.route('/posts/:_id', {\n  name: 'postPage',\n  waitOn: function() {\n    return [\n      Meteor.subscribe('singlePost', this.params._id),\n      Meteor.subscribe('comments', this.params._id)\n    ];\n  },\n  data: function() { return Posts.findOne(this.params._id); }\n});\n\nRouter.route('/posts/:_id/edit', {\n  name: 'postEdit',\n  waitOn: function() {\n    return Meteor.subscribe('singlePost', this.params._id);\n  },\n  data: function() { return Posts.findOne(this.params._id); }\n});\n\nRouter.route('/submit', {name: 'postSubmit'});\n\nRouter.route('/:postsLimit?', {\n  name: 'postsList',\n});\n\nvar requireLogin = function() {\n  if (! Meteor.user()) {\n    if (Meteor.loggingIn()) {\n      this.render(this.loadingTemplate);\n    } else {\n      this.render('accessDenied');\n    }\n  } else {\n    this.next();\n  }\n}\n\nRouter.onBeforeAction('dataNotFound', {only: 'postPage'});\nRouter.onBeforeAction(requireLogin, {only: 'postSubmit'});"]},"hash":"e4ec0dc0b3ef85115cba932325947984ac8cbef5"}
