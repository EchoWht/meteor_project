{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/templates/posts/post_list.js","filenameRelative":"/client/templates/posts/post_list.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/templates/posts/post_list.js.map","sourceFileName":"/client/templates/posts/post_list.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"post_list"},"ignored":false,"code":"Template.postsList.helpers({\n    // posts: function() {\n    //   return Posts.find({},{sort:{submitted:-1}});\n    // }\n});\nTemplate.postsList.onRendered(function () {\n    this.find('.wrapper')._uihooks = {\n        insertElement: function () {\n            function insertElement(node, next) {\n                $(node).hide().insertBefore(next).fadeIn();\n            }\n\n            return insertElement;\n        }(),\n        moveElement: function () {\n            function moveElement(node, next) {\n                var $node = $(node),\n                    $next = $(next);\n                var oldTop = $node.offset().top;\n                var height = $node.outerHeight(true);\n\n                // 找出 next 与 node 之间所有的元素\n                var $inBetween = $next.nextUntil(node);\n                if ($inBetween.length === 0) $inBetween = $node.nextUntil(next);\n\n                // 把 node 放在预订位置\n                $node.insertBefore(next);\n\n                // 测量新 top 偏移坐标\n                var newTop = $node.offset().top;\n\n                // 将 node *移回*至原始所在位置\n                $node.removeClass('animate').css('top', oldTop - newTop);\n\n                // push every other element down (or up) to put them back\n                $inBetween.removeClass('animate').css('top', oldTop < newTop ? height : -1 * height);\n\n                // 强制重绘\n                $node.offset();\n\n                // 动画，重置所有元素的 top 坐标为 0\n                $node.addClass('animate').css('top', 0);\n                $inBetween.addClass('animate').css('top', 0);\n            }\n\n            return moveElement;\n        }()\n    };\n});","ast":null,"map":{"version":3,"sources":["/client/templates/posts/post_list.js"],"names":[],"mappings":"AAAA,SAAS,SAAT,CAAmB,OAAnB,CAA2B;;;;CAA3B;AAKA,SAAS,SAAT,CAAmB,UAAnB,CAA8B,YAAY;AACtC,SAAK,IAAL,CAAU,UAAV,EAAsB,QAAtB,GAAiC;AAC7B;AAAe,mCAAU,IAAV,EAAgB,IAAhB,EAAsB;AACjC,kBAAE,IAAF,EACK,IADL,GAEK,YAFL,CAEkB,IAFlB,EAGK,MAHL,GADiC;aAAtB;;;WAAf;AAMA;AAAa,iCAAU,IAAV,EAAgB,IAAhB,EAAsB;AAC/B,oBAAI,QAAQ,EAAE,IAAF,CAAR;oBAAiB,QAAQ,EAAE,IAAF,CAAR,CADU;AAE/B,oBAAI,SAAS,MAAM,MAAN,GAAe,GAAf,CAFkB;AAG/B,oBAAI,SAAS,MAAM,WAAN,CAAkB,IAAlB,CAAT;;;AAH2B,oBAM3B,aAAa,MAAM,SAAN,CAAgB,IAAhB,CAAb,CAN2B;AAO/B,oBAAI,WAAW,MAAX,KAAsB,CAAtB,EACA,aAAa,MAAM,SAAN,CAAgB,IAAhB,CAAb,CADJ;;;AAP+B,qBAW/B,CAAM,YAAN,CAAmB,IAAnB;;;AAX+B,oBAc3B,SAAS,MAAM,MAAN,GAAe,GAAf;;;AAdkB,qBAiB/B,CACK,WADL,CACiB,SADjB,EAEK,GAFL,CAES,KAFT,EAEgB,SAAS,MAAT,CAFhB;;;AAjB+B,0BAsB/B,CACK,WADL,CACiB,SADjB,EAEK,GAFL,CAES,KAFT,EAEgB,SAAS,MAAT,GAAkB,MAAlB,GAA2B,CAAC,CAAD,GAAK,MAAL,CAF3C;;;AAtB+B,qBA2B/B,CAAM,MAAN;;;AA3B+B,qBA8B/B,CAAM,QAAN,CAAe,SAAf,EAA0B,GAA1B,CAA8B,KAA9B,EAAqC,CAArC,EA9B+B;AA+B/B,2BAAW,QAAX,CAAoB,SAApB,EAA+B,GAA/B,CAAmC,KAAnC,EAA0C,CAA1C,EA/B+B;aAAtB;;;WAAb;KAPJ,CADsC;CAAZ,CAA9B","file":"/client/templates/posts/post_list.js.map","sourcesContent":["Template.postsList.helpers({\n  // posts: function() {\n  //   return Posts.find({},{sort:{submitted:-1}});\n  // }\n});\nTemplate.postsList.onRendered(function () {\n    this.find('.wrapper')._uihooks = {\n        insertElement: function (node, next) {\n            $(node)\n                .hide()\n                .insertBefore(next)\n                .fadeIn();\n        },\n        moveElement: function (node, next) {\n            var $node = $(node), $next = $(next);\n            var oldTop = $node.offset().top;\n            var height = $node.outerHeight(true);\n\n            // 找出 next 与 node 之间所有的元素\n            var $inBetween = $next.nextUntil(node);\n            if ($inBetween.length === 0)\n                $inBetween = $node.nextUntil(next);\n\n            // 把 node 放在预订位置\n            $node.insertBefore(next);\n\n            // 测量新 top 偏移坐标\n            var newTop = $node.offset().top;\n\n            // 将 node *移回*至原始所在位置\n            $node\n                .removeClass('animate')\n                .css('top', oldTop - newTop);\n\n            // push every other element down (or up) to put them back\n            $inBetween\n                .removeClass('animate')\n                .css('top', oldTop < newTop ? height : -1 * height);\n\n            // 强制重绘\n            $node.offset();\n\n            // 动画，重置所有元素的 top 坐标为 0\n            $node.addClass('animate').css('top', 0);\n            $inBetween.addClass('animate').css('top', 0);\n        }\n    }\n});"]},"hash":"11077539c58711a8f369484d36d726f7e125d7b3"}
