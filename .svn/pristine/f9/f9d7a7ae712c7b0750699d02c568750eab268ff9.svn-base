{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/templates/comments/comment_submit.js","filenameRelative":"/client/templates/comments/comment_submit.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/templates/comments/comment_submit.js.map","sourceFileName":"/client/templates/comments/comment_submit.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"comment_submit"},"ignored":false,"code":"/**\r\n * Created by Administrator on 2016-06-12.\r\n */\nTemplate.commentSubmit.onCreated(function () {\n    Session.set('commentSubmitErrors', {});\n});\n\nTemplate.commentSubmit.helpers({\n    errorMessage: function () {\n        function errorMessage(field) {\n            return Session.get('commentSubmitErrors')[field];\n        }\n\n        return errorMessage;\n    }(),\n    errorClass: function () {\n        function errorClass(field) {\n            return !!Session.get('commentSubmitErrors')[field] ? 'has-error' : '';\n        }\n\n        return errorClass;\n    }()\n});\n\nTemplate.commentSubmit.events({\n    'submit form': function () {\n        function submitForm(e, template) {\n            e.preventDefault();\n\n            var $body = $(e.target).find('[name=body]');\n            var comment = {\n                body: $body.val(),\n                postId: template.data._id\n            };\n\n            var errors = {};\n            if (!comment.body) {\n                errors.body = \"Please write some content\";\n                return Session.set('commentSubmitErrors', errors);\n            }\n\n            Meteor.call('commentInsert', comment, function (error, commentId) {\n                if (error) {\n                    throwError(error.reason);\n                } else {\n                    $body.val('');\n                }\n            });\n        }\n\n        return submitForm;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/client/templates/comments/comment_submit.js"],"names":[],"mappings":";;;AAGA,SAAS,aAAT,CAAuB,SAAvB,CAAiC,YAAW;AACxC,YAAQ,GAAR,CAAY,qBAAZ,EAAmC,EAAnC,EADwC;CAAX,CAAjC;;AAIA,SAAS,aAAT,CAAuB,OAAvB,CAA+B;AAC3B;AAAc,8BAAS,KAAT,EAAgB;AAC1B,mBAAO,QAAQ,GAAR,CAAY,qBAAZ,EAAmC,KAAnC,CAAP,CAD0B;SAAhB;;;OAAd;AAGA;AAAY,4BAAU,KAAV,EAAiB;AACzB,mBAAO,CAAC,CAAC,QAAQ,GAAR,CAAY,qBAAZ,EAAmC,KAAnC,CAAD,GAA6C,WAA9C,GAA4D,EAA5D,CADkB;SAAjB;;;OAAZ;CAJJ;;AASA,SAAS,aAAT,CAAuB,MAAvB,CAA8B;AAC1B;AAAe,4BAAS,CAAT,EAAY,QAAZ,EAAsB;AACjC,cAAE,cAAF,GADiC;;AAGjC,gBAAI,QAAQ,EAAE,EAAE,MAAF,CAAF,CAAY,IAAZ,CAAiB,aAAjB,CAAR,CAH6B;AAIjC,gBAAI,UAAU;AACV,sBAAM,MAAM,GAAN,EAAN;AACA,wBAAQ,SAAS,IAAT,CAAc,GAAd;aAFR,CAJ6B;;AASjC,gBAAI,SAAS,EAAT,CAT6B;AAUjC,gBAAI,CAAE,QAAQ,IAAR,EAAc;AAChB,uBAAO,IAAP,GAAc,2BAAd,CADgB;AAEhB,uBAAO,QAAQ,GAAR,CAAY,qBAAZ,EAAmC,MAAnC,CAAP,CAFgB;aAApB;;AAKA,mBAAO,IAAP,CAAY,eAAZ,EAA6B,OAA7B,EAAsC,UAAS,KAAT,EAAgB,SAAhB,EAA2B;AAC7D,oBAAI,KAAJ,EAAU;AACN,+BAAW,MAAM,MAAN,CAAX,CADM;iBAAV,MAEO;AACH,0BAAM,GAAN,CAAU,EAAV,EADG;iBAFP;aADkC,CAAtC,CAfiC;SAAtB;;;OAAf;CADJ","file":"/client/templates/comments/comment_submit.js.map","sourcesContent":["/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nTemplate.commentSubmit.onCreated(function() {\r\n    Session.set('commentSubmitErrors', {});\r\n});\r\n\r\nTemplate.commentSubmit.helpers({\r\n    errorMessage: function(field) {\r\n        return Session.get('commentSubmitErrors')[field];\r\n    },\r\n    errorClass: function (field) {\r\n        return !!Session.get('commentSubmitErrors')[field] ? 'has-error' : '';\r\n    }\r\n});\r\n\r\nTemplate.commentSubmit.events({\r\n    'submit form': function(e, template) {\r\n        e.preventDefault();\r\n\r\n        var $body = $(e.target).find('[name=body]');\r\n        var comment = {\r\n            body: $body.val(),\r\n            postId: template.data._id\r\n        };\r\n\r\n        var errors = {};\r\n        if (! comment.body) {\r\n            errors.body = \"Please write some content\";\r\n            return Session.set('commentSubmitErrors', errors);\r\n        }\r\n\r\n        Meteor.call('commentInsert', comment, function(error, commentId) {\r\n            if (error){\r\n                throwError(error.reason);\r\n            } else {\r\n                $body.val('');\r\n            }\r\n        });\r\n    }\r\n});"]},"hash":"87427ce2704ecea79e181fcd5831e4dad5f66324"}
