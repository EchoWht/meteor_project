{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/lib/comments.js","filenameRelative":"/lib/comments.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/lib/comments.js.map","sourceFileName":"/lib/comments.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"comments"},"ignored":false,"code":"/**\r\n * Created by Administrator on 2016-06-12.\r\n */\nComments = new Mongo.Collection('comments');\nMeteor.methods({\n    commentInsert: function () {\n        function commentInsert(commentAttributes) {\n            check(this.userId, String);\n            check(commentAttributes, {\n                postId: String,\n                body: String\n            });\n            var user = Meteor.user();\n            var post = Posts.findOne(commentAttributes.postId);\n            if (!post) throw new Meteor.Error('invalid-comment', 'You must comment on a post');\n            comment = _.extend(commentAttributes, {\n                userId: user._id,\n                author: user.username,\n                submitted: new Date()\n            });\n            // 更新帖子的评论数\n            Posts.update(comment.postId, { $inc: { commentsCount: 1 } });\n            // return Comments.insert(comment);\n            // create the comment, save the id\n            comment._id = Comments.insert(comment);\n            // now create a notification, informing the user that there's been a comment\n            createCommentNotification(comment);\n            return comment._id;\n        }\n\n        return commentInsert;\n    }()\n});","ast":null,"map":{"version":3,"sources":["/lib/comments.js"],"names":[],"mappings":";;;AAGA,WAAW,IAAI,MAAM,UAAN,CAAiB,UAArB,CAAX;AACA,OAAO,OAAP,CAAe;AACX;AAAe,+BAAS,iBAAT,EAA4B;AACvC,kBAAM,KAAK,MAAL,EAAa,MAAnB,EADuC;AAEvC,kBAAM,iBAAN,EAAyB;AACrB,wBAAQ,MAAR;AACA,sBAAM,MAAN;aAFJ,EAFuC;AAMvC,gBAAI,OAAO,OAAO,IAAP,EAAP,CANmC;AAOvC,gBAAI,OAAO,MAAM,OAAN,CAAc,kBAAkB,MAAlB,CAArB,CAPmC;AAQvC,gBAAI,CAAC,IAAD,EACA,MAAM,IAAI,OAAO,KAAP,CAAa,iBAAjB,EAAoC,4BAApC,CAAN,CADJ;AAEA,sBAAU,EAAE,MAAF,CAAS,iBAAT,EAA4B;AAClC,wBAAQ,KAAK,GAAL;AACR,wBAAQ,KAAK,QAAL;AACR,2BAAW,IAAI,IAAJ,EAAX;aAHM,CAAV;;AAVuC,iBAgBvC,CAAM,MAAN,CAAa,QAAQ,MAAR,EAAgB,EAAC,MAAM,EAAC,eAAe,CAAf,EAAP,EAA9B;;;AAhBuC,mBAmBvC,CAAQ,GAAR,GAAc,SAAS,MAAT,CAAgB,OAAhB,CAAd;;AAnBuC,qCAqBvC,CAA0B,OAA1B,EArBuC;AAsBvC,mBAAO,QAAQ,GAAR,CAtBgC;SAA5B;;;OAAf;CADJ","file":"/lib/comments.js.map","sourcesContent":["/**\r\n * Created by Administrator on 2016-06-12.\r\n */\r\nComments = new Mongo.Collection('comments');\r\nMeteor.methods({\r\n    commentInsert: function(commentAttributes) {\r\n        check(this.userId, String);\r\n        check(commentAttributes, {\r\n            postId: String,\r\n            body: String\r\n        });\r\n        var user = Meteor.user();\r\n        var post = Posts.findOne(commentAttributes.postId);\r\n        if (!post)\r\n            throw new Meteor.Error('invalid-comment', 'You must comment on a post');\r\n        comment = _.extend(commentAttributes, {\r\n            userId: user._id,\r\n            author: user.username,\r\n            submitted: new Date()\r\n        });\r\n        // 更新帖子的评论数\r\n        Posts.update(comment.postId, {$inc: {commentsCount: 1}});\r\n        // return Comments.insert(comment);\r\n        // create the comment, save the id\r\n        comment._id = Comments.insert(comment);\r\n        // now create a notification, informing the user that there's been a comment\r\n        createCommentNotification(comment);\r\n        return comment._id;\r\n    }\r\n});"]},"hash":"818201ebc31f93b661b4c4234844add66b2e597e"}
